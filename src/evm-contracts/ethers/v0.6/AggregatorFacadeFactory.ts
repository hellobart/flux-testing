/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";
import { BigNumberish } from "ethers/utils";

import { TransactionOverrides } from ".";
import { AggregatorFacade } from "./AggregatorFacade";

export class AggregatorFacadeFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _aggregator: string,
    _decimals: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<AggregatorFacade> {
    return super.deploy(_aggregator, _decimals, overrides) as Promise<
      AggregatorFacade
    >;
  }
  getDeployTransaction(
    _aggregator: string,
    _decimals: BigNumberish,
    overrides?: TransactionOverrides
  ): UnsignedTransaction {
    return super.getDeployTransaction(_aggregator, _decimals, overrides);
  }
  attach(address: string): AggregatorFacade {
    return super.attach(address) as AggregatorFacade;
  }
  connect(signer: Signer): AggregatorFacadeFactory {
    return super.connect(signer) as AggregatorFacadeFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AggregatorFacade {
    return new Contract(address, _abi, signerOrProvider) as AggregatorFacade;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_aggregator",
        type: "address"
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "int256",
        name: "current",
        type: "int256"
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "roundId",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256"
      }
    ],
    name: "AnswerUpdated",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "roundId",
        type: "uint256"
      },
      {
        indexed: true,
        internalType: "address",
        name: "startedBy",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startedAt",
        type: "uint256"
      }
    ],
    name: "NewRound",
    type: "event"
  },
  {
    inputs: [],
    name: "aggregator",
    outputs: [
      {
        internalType: "contract HistoricAggregatorInterface",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_roundId",
        type: "uint256"
      }
    ],
    name: "getAnswer",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_roundId",
        type: "uint256"
      }
    ],
    name: "getRoundData",
    outputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256"
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256"
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "answeredInRound",
        type: "uint256"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_roundId",
        type: "uint256"
      }
    ],
    name: "getTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "latestAnswer",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "latestRound",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "latestRoundData",
    outputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256"
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256"
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "answeredInRound",
        type: "uint256"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "latestTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516107793803806107798339818101604052604081101561003357600080fd5b5080516020909101516000805460ff909216600160a01b0260ff60a01b196001600160a01b039094166001600160a01b031990931692909217929092161790556106f7806100826000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063668a0f0211610076578063b5ab58dc1161005b578063b5ab58dc14610169578063b633620c14610186578063feaf968c146101a3576100a3565b8063668a0f02146101595780638205bf6a14610161576100a3565b80630720da52146100a8578063245a7bfc146100f0578063313ce5671461012157806350d25bcd1461013f575b600080fd5b6100c5600480360360208110156100be57600080fd5b50356101ab565b6040805195865260208601949094528484019290925260608401526080830152519081900360a00190f35b6100f86101ce565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101296101ea565b6040805160ff9092168252519081900360200190f35b61014761020b565b60408051918252519081900360200190f35b6101476102a7565b610147610312565b6101476004803603602081101561017f57600080fd5b503561037d565b6101476004803603602081101561019c57600080fd5b5035610423565b6100c5610497565b60008060008060006101bc8661054d565b939a9299509097509550909350915050565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60005474010000000000000000000000000000000000000000900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561027657600080fd5b505af115801561028a573d6000803e3d6000fd5b505050506040513d60208110156102a057600080fd5b5051905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663668a0f026040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561027657600080fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638205bf6a6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561027657600080fd5b60008054604080517fb5ab58dc00000000000000000000000000000000000000000000000000000000815260048101859052905173ffffffffffffffffffffffffffffffffffffffff9092169163b5ab58dc9160248082019260209290919082900301818787803b1580156103f157600080fd5b505af1158015610405573d6000803e3d6000fd5b505050506040513d602081101561041b57600080fd5b505192915050565b60008054604080517fb633620c00000000000000000000000000000000000000000000000000000000815260048101859052905173ffffffffffffffffffffffffffffffffffffffff9092169163b633620c9160248082019260209290919082900301818787803b1580156103f157600080fd5b600080600080600061053c6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663668a0f026040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561050b57600080fd5b505af115801561051f573d6000803e3d6000fd5b505050506040513d602081101561053557600080fd5b505161054d565b945094509450945094509091929394565b60008054604080517fb5ab58dc000000000000000000000000000000000000000000000000000000008152600481018590529051839283928392839273ffffffffffffffffffffffffffffffffffffffff169163b5ab58dc91602480830192602092919082900301818787803b1580156105c657600080fd5b505af11580156105da573d6000803e3d6000fd5b505050506040513d60208110156105f057600080fd5b505160008054604080517fb633620c000000000000000000000000000000000000000000000000000000008152600481018b9052905193975073ffffffffffffffffffffffffffffffffffffffff9091169263b633620c92602480840193602093929083900390910190829087803b15801561066b57600080fd5b505af115801561067f573d6000803e3d6000fd5b505050506040513d602081101561069557600080fd5b505167ffffffffffffffff169150816106b0575060006106b3565b50845b94959294909350839290915056fea2646970667358221220b664f4adacb593cd08be13f1e2c0054e3c3e33ee991124fa87f5ff098ce0e4a764736f6c63430006020033";
