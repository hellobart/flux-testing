/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TransactionOverrides } from ".";
import { VRFConsumer } from "./VRFConsumer";

export class VRFConsumerFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _vrfCoordinator: string,
    _link: string,
    overrides?: TransactionOverrides
  ): Promise<VRFConsumer> {
    return super.deploy(_vrfCoordinator, _link, overrides) as Promise<
      VRFConsumer
    >;
  }
  getDeployTransaction(
    _vrfCoordinator: string,
    _link: string,
    overrides?: TransactionOverrides
  ): UnsignedTransaction {
    return super.getDeployTransaction(_vrfCoordinator, _link, overrides);
  }
  attach(address: string): VRFConsumer {
    return super.attach(address) as VRFConsumer;
  }
  connect(signer: Signer): VRFConsumerFactory {
    return super.connect(signer) as VRFConsumerFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VRFConsumer {
    return new Contract(address, _abi, signerOrProvider) as VRFConsumer;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address"
      },
      {
        internalType: "address",
        name: "_link",
        type: "address"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32"
      },
      {
        internalType: "uint256",
        name: "_randomness",
        type: "uint256"
      }
    ],
    name: "fulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "randomnessOutput",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "requestId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_keyHash",
        type: "bytes32"
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_seed",
        type: "uint256"
      }
    ],
    name: "requestRandomness",
    outputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516104663803806104668339818101604052604081101561003357600080fd5b508051602090910151600180546001600160a01b039384166001600160a01b031991821617909155600080549390921692169190911790556103ec8061007a6000396000f3fe608060405234801561001057600080fd5b50600436106100665760003560e01c80632f47fd86116100505780632f47fd86146100aa5780639e317f12146100b2578063dc6cfe10146100cf57610066565b80626d6cae1461006b5780631f1f897f14610085575b600080fd5b6100736100f8565b60408051918252519081900360200190f35b6100a86004803603604081101561009b57600080fd5b50803590602001356100fe565b005b610073610106565b610073600480360360208110156100c857600080fd5b503561010c565b610073600480360360608110156100e557600080fd5b508035906020810135906040013561011e565b60045481565b600355600455565b60035481565b60026020526000908152604090205481565b600080546001546040805160208082018990528183018790528251808303840181526060808401948590527f4000aea00000000000000000000000000000000000000000000000000000000090945273ffffffffffffffffffffffffffffffffffffffff94851660648401818152608485018b905260a48501958652825160c486015282519690971696634000aea09691958b9593949193909260e4909101918501908083838d5b838110156101de5781810151838201526020016101c6565b50505050905090810190601f16801561020b5780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b15801561022c57600080fd5b505af1158015610240573d6000803e3d6000fd5b505050506040513d602081101561025657600080fd5b5050600084815260026020526040812054610276908690859030906102bb565b60008681526002602052604090205490915061029990600163ffffffff61030f16565b6000868152600260205260409020556102b2858261038a565b95945050505050565b604080516020808201969096528082019490945273ffffffffffffffffffffffffffffffffffffffff9290921660608401526080808401919091528151808403909101815260a09092019052805191012090565b60008282018381101561038357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b60408051602080820194909452808201929092528051808303820181526060909201905280519101209056fea2646970667358221220c4daacd1d315fa03877932022aa9e60e97660dfba059c07b14e1b878fd43d1fb64736f6c63430006020033";
