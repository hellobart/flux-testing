/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TransactionOverrides } from ".";
import { AggregatorProxy } from "./AggregatorProxy";

export class AggregatorProxyFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _aggregator: string,
    overrides?: TransactionOverrides
  ): Promise<AggregatorProxy> {
    return super.deploy(_aggregator, overrides) as Promise<AggregatorProxy>;
  }
  getDeployTransaction(
    _aggregator: string,
    overrides?: TransactionOverrides
  ): UnsignedTransaction {
    return super.getDeployTransaction(_aggregator, overrides);
  }
  attach(address: string): AggregatorProxy {
    return super.attach(address) as AggregatorProxy;
  }
  connect(signer: Signer): AggregatorProxyFactory {
    return super.connect(signer) as AggregatorProxyFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AggregatorProxy {
    return new Contract(address, _abi, signerOrProvider) as AggregatorProxy;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_aggregator",
        type: "address"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "int256",
        name: "current",
        type: "int256"
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "roundId",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256"
      }
    ],
    name: "AnswerUpdated",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "roundId",
        type: "uint256"
      },
      {
        indexed: true,
        internalType: "address",
        name: "startedBy",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startedAt",
        type: "uint256"
      }
    ],
    name: "NewRound",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address"
      }
    ],
    name: "OwnershipTransferRequested",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "aggregator",
    outputs: [
      {
        internalType: "contract AggregatorInterface",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_roundId",
        type: "uint256"
      }
    ],
    name: "getAnswer",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_roundId",
        type: "uint256"
      }
    ],
    name: "getRoundData",
    outputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256"
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256"
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "answeredInRound",
        type: "uint256"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_roundId",
        type: "uint256"
      }
    ],
    name: "getTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "latestAnswer",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "latestRound",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "latestRoundData",
    outputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256"
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256"
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "answeredInRound",
        type: "uint256"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "latestTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_aggregator",
        type: "address"
      }
    ],
    name: "setAggregator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b97380380610b978339818101604052602081101561003357600080fd5b5051600080546001600160a01b03191633179055610059816001600160e01b0361005f16565b506100e0565b6000546001600160a01b031633146100be576040805162461bcd60e51b815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b610aa8806100ef6000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80638205bf6a1161008c578063b633620c11610066578063b633620c146101d4578063f2fde38b146101f1578063f9120af614610224578063feaf968c14610257576100df565b80638205bf6a146101a75780638da5cb5b146101af578063b5ab58dc146101b7576100df565b806350d25bcd116100bd57806350d25bcd1461017b578063668a0f021461019557806379ba50971461019d576100df565b80630720da52146100e4578063245a7bfc1461012c578063313ce5671461015d575b600080fd5b610101600480360360208110156100fa57600080fd5b503561025f565b6040805195865260208601949094528484019290925260608401526080830152519081900360a00190f35b610134610282565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61016561029e565b6040805160ff9092168252519081900360200190f35b61018361033b565b60408051918252519081900360200190f35b61018361034a565b6101a5610354565b005b610183610456565b610134610460565b610183600480360360208110156101cd57600080fd5b503561047c565b610183600480360360208110156101ea57600080fd5b503561048d565b6101a56004803603602081101561020757600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610498565b6101a56004803603602081101561023a57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610594565b610101610661565b600080600080600061027086610682565b939a9299509097509550909350915050565b60025473ffffffffffffffffffffffffffffffffffffffff1681565b600254604080517f313ce567000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163313ce56791600480830192602092919082900301818787803b15801561030a57600080fd5b505af115801561031e573d6000803e3d6000fd5b505050506040513d602081101561033457600080fd5b5051905090565b6000610345610752565b905090565b60006103456107be565b60015473ffffffffffffffffffffffffffffffffffffffff1633146103da57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e657200000000000000000000604482015290519081900360640190fd5b60008054337fffffffffffffffffffffffff00000000000000000000000000000000000000008083168217845560018054909116905560405173ffffffffffffffffffffffffffffffffffffffff90921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b600061034561082a565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b600061048782610896565b92915050565b60006104878261093b565b60005473ffffffffffffffffffffffffffffffffffffffff16331461051e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000604482015290519081900360640190fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60005473ffffffffffffffffffffffffffffffffffffffff16331461061a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000604482015290519081900360640190fd5b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60008060008060006106716109ae565b945094509450945094509091929394565b6000806000806000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630720da52876040518263ffffffff1660e01b81526004018082815260200191505060a060405180830381600087803b1580156106ff57600080fd5b505af1158015610713573d6000803e3d6000fd5b505050506040513d60a081101561072957600080fd5b508051602082015160408301516060840151608090940151929a91995097509195509350915050565b600254604080517f50d25bcd000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff16916350d25bcd91600480830192602092919082900301818787803b15801561030a57600080fd5b600254604080517f668a0f02000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163668a0f0291600480830192602092919082900301818787803b15801561030a57600080fd5b600254604080517f8205bf6a000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff1691638205bf6a91600480830192602092919082900301818787803b15801561030a57600080fd5b600254604080517fb5ab58dc00000000000000000000000000000000000000000000000000000000815260048101849052905160009273ffffffffffffffffffffffffffffffffffffffff169163b5ab58dc91602480830192602092919082900301818787803b15801561090957600080fd5b505af115801561091d573d6000803e3d6000fd5b505050506040513d602081101561093357600080fd5b505192915050565b600254604080517fb633620c00000000000000000000000000000000000000000000000000000000815260048101849052905160009273ffffffffffffffffffffffffffffffffffffffff169163b633620c91602480830192602092919082900301818787803b15801561090957600080fd5b6000806000806000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381600087803b158015610a2057600080fd5b505af1158015610a34573d6000803e3d6000fd5b505050506040513d60a0811015610a4a57600080fd5b508051602082015160408301516060840151608090940151929991985096509194509250905056fea2646970667358221220de24f3ba127c10a0582e38aa3d54c3efe657fdea3d0337b4bf6b22df49ff166564736f6c63430006020033";
