{
	"schemaVersion": "2.0.0",
	"contractName": "VRFTestHelper",
	"compilerOutput": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256[2]",
						"name": "p1",
						"type": "uint256[2]"
					},
					{
						"internalType": "uint256[2]",
						"name": "p2",
						"type": "uint256[2]"
					},
					{
						"internalType": "uint256",
						"name": "invZ",
						"type": "uint256"
					}
				],
				"name": "affineECAdd_",
				"outputs": [
					{
						"internalType": "uint256[2]",
						"name": "",
						"type": "uint256[2]"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "base",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "exponent",
						"type": "uint256"
					}
				],
				"name": "bigModExp_",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[2]",
						"name": "x",
						"type": "uint256[2]"
					},
					{
						"internalType": "uint256",
						"name": "scalar",
						"type": "uint256"
					},
					{
						"internalType": "uint256[2]",
						"name": "q",
						"type": "uint256[2]"
					}
				],
				"name": "ecmulVerify_",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "b",
						"type": "bytes"
					}
				],
				"name": "fieldHash_",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[2]",
						"name": "pk",
						"type": "uint256[2]"
					},
					{
						"internalType": "uint256",
						"name": "x",
						"type": "uint256"
					}
				],
				"name": "hashToCurve_",
				"outputs": [
					{
						"internalType": "uint256[2]",
						"name": "",
						"type": "uint256[2]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "c",
						"type": "uint256"
					},
					{
						"internalType": "uint256[2]",
						"name": "p1",
						"type": "uint256[2]"
					},
					{
						"internalType": "uint256[2]",
						"name": "cp1Witness",
						"type": "uint256[2]"
					},
					{
						"internalType": "uint256",
						"name": "s",
						"type": "uint256"
					},
					{
						"internalType": "uint256[2]",
						"name": "p2",
						"type": "uint256[2]"
					},
					{
						"internalType": "uint256[2]",
						"name": "sp2Witness",
						"type": "uint256[2]"
					},
					{
						"internalType": "uint256",
						"name": "zInv",
						"type": "uint256"
					}
				],
				"name": "linearCombination_",
				"outputs": [
					{
						"internalType": "uint256[2]",
						"name": "",
						"type": "uint256[2]"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "px",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "py",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "qx",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "qy",
						"type": "uint256"
					}
				],
				"name": "projectiveECAdd_",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "proof",
						"type": "bytes"
					}
				],
				"name": "randomValueFromVRFProof_",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "output",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[2]",
						"name": "hash",
						"type": "uint256[2]"
					},
					{
						"internalType": "uint256[2]",
						"name": "pk",
						"type": "uint256[2]"
					},
					{
						"internalType": "uint256[2]",
						"name": "gamma",
						"type": "uint256[2]"
					},
					{
						"internalType": "address",
						"name": "uWitness",
						"type": "address"
					},
					{
						"internalType": "uint256[2]",
						"name": "v",
						"type": "uint256[2]"
					}
				],
				"name": "scalarFromCurvePoints_",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "x",
						"type": "uint256"
					}
				],
				"name": "squareRoot_",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "c",
						"type": "uint256"
					},
					{
						"internalType": "uint256[2]",
						"name": "p",
						"type": "uint256[2]"
					},
					{
						"internalType": "uint256",
						"name": "s",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "lcWitness",
						"type": "address"
					}
				],
				"name": "verifyLinearCombinationWithGenerator_",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[2]",
						"name": "pk",
						"type": "uint256[2]"
					},
					{
						"internalType": "uint256[2]",
						"name": "gamma",
						"type": "uint256[2]"
					},
					{
						"internalType": "uint256",
						"name": "c",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "s",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "seed",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "uWitness",
						"type": "address"
					},
					{
						"internalType": "uint256[2]",
						"name": "cGammaWitness",
						"type": "uint256[2]"
					},
					{
						"internalType": "uint256[2]",
						"name": "sHashWitness",
						"type": "uint256[2]"
					},
					{
						"internalType": "uint256",
						"name": "zInv",
						"type": "uint256"
					}
				],
				"name": "verifyVRFProof_",
				"outputs": [],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "x",
						"type": "uint256"
					}
				],
				"name": "ySquared_",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			}
		],
		"devdoc": {
			"methods": {}
		},
		"evm": {
			"bytecode": {
				"linkReferences": {},
				"object": "0x608060405234801561001057600080fd5b50612220806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806395e6ee921161008c578063b481e26011610066578063b481e2601461067f578063cefda0c51461074e578063ef3b10ec1461081d578063fe54f2a21461098e576100cf565b806395e6ee92146105075780639d6f033714610575578063aa7b2fbb146105b7576100cf565b8063244f896d146100d457806335452450146101c05780635de600421461026b5780637f8f50a8146102b75780638af046ea1461041457806391d5f69114610456575b600080fd5b610182600480360360a08110156100ea57600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080359060200190929190505050610b11565b6040518082600260200280838360005b838110156101ad578082015181840152602081019050610192565b5050505090500191505060405180910390f35b61022d600480360360608110156101d657600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080359060200190929190505050610b2d565b6040518082600260200280838360005b8381101561025857808201518184015260208101905061023d565b5050505090500191505060405180910390f35b6102a16004803603604081101561028157600080fd5b810190808035906020019092919080359060200190929190505050610b47565b6040518082815260200191505060405180910390f35b6103fe60048036036101208110156102ce57600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050610b5b565b6040518082815260200191505060405180910390f35b6104406004803603602081101561042a57600080fd5b8101908080359060200190929190505050610b75565b6040518082815260200191505060405180910390f35b6104ed600480360360a081101561046c57600080fd5b810190808035906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b87565b604051808215151515815260200191505060405180910390f35b6105516004803603608081101561051d57600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190505050610b9f565b60405180848152602001838152602001828152602001935050505060405180910390f35b6105a16004803603602081101561058b57600080fd5b8101908080359060200190929190505050610bc0565b6040518082815260200191505060405180910390f35b610665600480360360a08110156105cd57600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908035906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050610bd2565b604051808215151515815260200191505060405180910390f35b6107386004803603602081101561069557600080fd5b81019080803590602001906401000000008111156106b257600080fd5b8201836020820111156106c457600080fd5b803590602001918460018302840111640100000000831117156106e657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610be8565b6040518082815260200191505060405180910390f35b6108076004803603602081101561076457600080fd5b810190808035906020019064010000000081111561078157600080fd5b82018360208201111561079357600080fd5b803590602001918460018302840111640100000000831117156107b557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610bfa565b6040518082815260200191505060405180910390f35b61098c60048036036101a081101561083457600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080359060200190929190505050610c0c565b005b610ad360048036036101608110156109a557600080fd5b810190808035906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908035906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080359060200190929190505050610c28565b6040518082600260200280838360005b83811015610afe578082015181840152602081019050610ae3565b5050505090500191505060405180910390f35b610b1961211f565b610b24848484610c4c565b90509392505050565b610b3561211f565b610b3f8383610dca565b905092915050565b6000610b538383610e89565b905092915050565b6000610b6a8686868686610feb565b905095945050505050565b6000610b808261111a565b9050919050565b6000610b9585858585611154565b9050949350505050565b6000806000610bb08787878761138c565b9250925092509450945094915050565b6000610bcb82611560565b9050919050565b6000610bdf8484846115ee565b90509392505050565b6000610bf382611779565b9050919050565b6000610c05826117e6565b9050919050565b610c1d8989898989898989896119b6565b505050505050505050565b610c3061211f565b610c3f88888888888888611ce1565b9050979650505050505050565b610c5461211f565b6000806000610ca987600060028110610c6957fe5b602002015188600160028110610c7b57fe5b602002015188600060028110610c8d57fe5b602002015189600160028110610c9f57fe5b602002015161138c565b80935081945082955050505060017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80610cdf57fe5b86830914610d55576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f696e765a206d75737420626520696e7665727365206f66207a0000000000000081525060200191505060405180910390fd5b60405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80610d8857fe5b87860981526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80610db857fe5b87850981525093505050509392505050565b610dd261211f565b610e33600184846040516020018084815260200183600260200280838360005b83811015610e0d578082015181840152602081019050610df2565b505050509050018281526020019350505050604051602081830303815290604052611e85565b90505b610e3f81611f58565b610e8357610e7c81600060028110610e5357fe5b602002015160405160200180828152602001915050604051602081830303815290604052611e85565b9050610e36565b92915050565b600080610e94612141565b602081600060068110610ea357fe5b602002018181525050602081600160068110610ebb57fe5b602002018181525050602081600260068110610ed357fe5b6020020181815250508481600360068110610eea57fe5b6020020181815250508381600460068110610f0157fe5b6020020181815250507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f81600560068110610f3857fe5b602002018181525050610f49612163565b60208160c0846005600019fa92506000831415610fce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6269674d6f64457870206661696c75726521000000000000000000000000000081525060200191505060405180910390fd5b80600060018110610fdb57fe5b6020020151935050505092915050565b6000600286868685876040516020018087815260200186600260200280838360005b8381101561102857808201518184015260208101905061100d565b5050505090500185600260200280838360005b8381101561105657808201518184015260208101905061103b565b5050505090500184600260200280838360005b83811015611084578082015181840152602081019050611069565b5050505090500183600260200280838360005b838110156110b2578082015181840152602081019050611097565b505050509050018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140196505050505050506040516020818303038152906040528051906020012060001c905095945050505050565b600061114d82600260017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f01901c610e89565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f626164207769746e65737300000000000000000000000000000000000000000081525060200191505060405180910390fd5b60008060028660016002811061120a57fe5b60200201518161121657fe5b061461122357601c611226565b601b5b905060007ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd03641418061125257fe5b858760006002811061126057fe5b6020020151097ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd03641410360001b905060007ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141806112b757fe5b876000600281106112c457fe5b6020020151890960001b90506000600183858a6000600281106112e357fe5b602002015160001b8560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611343573d6000803e3d6000fd5b5050506020604051035190508573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614945050505050949350505050565b60008060008060006001809150915060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f806113c557fe5b897ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f038808905060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8061141657fe5b8b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f038a089050600061144b83838585611fc9565b809250819950505061145f88828e88612033565b809250819950505061147388828c87612033565b809250819950505060006114898d878b85612033565b809250819950505061149d88828686611fc9565b80925081995050506114b188828e89612033565b809250819950505080821461154c577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f806114e857fe5b818a0998507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8061151557fe5b82890997507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8061154257fe5b8183099650611550565b8196505b5050505050509450945094915050565b6000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8061158b57fe5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f806115b357fe5b848509840990507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f806115e257fe5b60078208915050919050565b6000808314156115fd57600080fd5b60008460006002811061160c57fe5b6020020151905060008060028760016002811061162557fe5b60200201518161163157fe5b061461163e57601c611641565b601b5b905060007ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd03641418061166d57fe5b83870960001b9050600060016000801b848660001b8560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156116da573d6000803e3d6000fd5b5050506020604051035190506000866040516020018082600260200280838360005b838110156117175780820151818401526020810190506116fc565b505050509050019150506040516020818303038152906040528051906020012060001c90508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614955050505050509392505050565b6000818051906020012060001c90505b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f81106117e15780604051602001808281526020019150506040516020818303038152906040528051906020012060001c9050611789565b919050565b60006101a0825114611860576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f77726f6e672070726f6f66206c656e677468000000000000000000000000000081525060200191505060405180910390fd5b61186861211f565b61187061211f565b611878612185565b600061188261211f565b61188a61211f565b6000888060200190516101a08110156118a257600080fd5b810190809190826040019190826040019190826060018051906020019092919091908260400191908260400180519060200190929190505050869650859550849450839350829250819150809750819850829950839a50849b50859c50869d505050505050505061194d87878760006003811061191b57fe5b60200201518860016003811061192d57fe5b60200201518960026003811061193f57fe5b6020020151898989896119b6565b6003866040516020018083815260200182600260200280838360005b83811015611984578082015181840152602081019050611969565b50505050905001925050506040516020818303038152906040528051906020012060001c975050505050505050919050565b6119bf89611f58565b611a31576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f7075626c6963206b6579206973206e6f74206f6e20637572766500000000000081525060200191505060405180910390fd5b611a3a88611f58565b611aac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f67616d6d61206973206e6f74206f6e206375727665000000000000000000000081525060200191505060405180910390fd5b611ab583611f58565b611b27576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6347616d6d615769746e657373206973206e6f74206f6e20637572766500000081525060200191505060405180910390fd5b611b3082611f58565b611ba2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f73486173685769746e657373206973206e6f74206f6e2063757276650000000081525060200191505060405180910390fd5b611bae878a8887611154565b611c20576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f6164647228632a706b2b732a6729e289a05f755769746e65737300000000000081525060200191505060405180910390fd5b611c2861211f565b611c328a87610dca565b9050611c3c61211f565b611c4b898b878b868989611ce1565b90506000611c5c838d8d8a86610feb565b9050808a14611cd3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f696e76616c69642070726f6f660000000000000000000000000000000000000081525060200191505060405180910390fd5b505050505050505050505050565b611ce961211f565b60007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f84600060028110611d1957fe5b602002015188600060028110611d2b57fe5b60200201510381611d3857fe5b061415611dad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f706f696e747320696e2073756d206d7573742062652064697374696e6374000081525060200191505060405180910390fd5b611db88789886115ee565b611e0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806121a86021913960400191505060405180910390fd5b611e188486856115ee565b611e6d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806121c96022913960400191505060405180910390fd5b611e78868484610c4c565b9050979650505050505050565b611e8d61211f565b611e9682611779565b81600060028110611ea357fe5b602002018181525050611ece611ec982600060028110611ebf57fe5b6020020151611560565b61111a565b81600160028110611edb57fe5b6020020181815250506001600282600160028110611ef557fe5b602002015181611f0157fe5b061415611f535780600160028110611f1557fe5b60200201517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f0381600160028110611f4957fe5b6020020181815250505b919050565b60007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80611f8257fe5b82600160028110611f8f57fe5b602002015183600160028110611fa157fe5b602002015109611fc183600060028110611fb757fe5b6020020151611560565b149050919050565b6000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80611ff457fe5b8487097ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8061201f57fe5b848709809250819350505094509492505050565b60008060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8061206057fe5b878509905060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8061208f57fe5b87877ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f030990507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f806120de57fe5b8183087ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8061210957fe5b8689098094508195505050505094509492505050565b6040518060400160405280600290602082028038833980820191505090505090565b6040518060c00160405280600690602082028038833980820191505090505090565b6040518060200160405280600190602082028038833980820191505090505090565b604051806060016040528060039060208202803883398082019150509050509056fe4669727374206d756c7469706c69636174696f6e20636865636b206661696c65645365636f6e64206d756c7469706c69636174696f6e20636865636b206661696c6564a264697066735822122059895ae68c83c1643d4051daf2ce742530f14b7dc90d7bb99fe8210f7273a72664736f6c63430006020033",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2220 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95E6EE92 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xB481E260 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB481E260 EQ PUSH2 0x67F JUMPI DUP1 PUSH4 0xCEFDA0C5 EQ PUSH2 0x74E JUMPI DUP1 PUSH4 0xEF3B10EC EQ PUSH2 0x81D JUMPI DUP1 PUSH4 0xFE54F2A2 EQ PUSH2 0x98E JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x95E6EE92 EQ PUSH2 0x507 JUMPI DUP1 PUSH4 0x9D6F0337 EQ PUSH2 0x575 JUMPI DUP1 PUSH4 0xAA7B2FBB EQ PUSH2 0x5B7 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x244F896D EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x35452450 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x5DE60042 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x7F8F50A8 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x8AF046EA EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0x91D5F691 EQ PUSH2 0x456 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x192 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x258 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x23D JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x120 DUP2 LT ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x551 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x58B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x665 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x5CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0xBD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x738 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x695 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x6B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x6E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x807 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x781 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x793 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x7B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0xBFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x98C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x1A0 DUP2 LT ISZERO PUSH2 0x834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC0C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x160 DUP2 LT ISZERO PUSH2 0x9A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAFE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAE3 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB19 PUSH2 0x211F JUMP JUMPDEST PUSH2 0xB24 DUP5 DUP5 DUP5 PUSH2 0xC4C JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB35 PUSH2 0x211F JUMP JUMPDEST PUSH2 0xB3F DUP4 DUP4 PUSH2 0xDCA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB53 DUP4 DUP4 PUSH2 0xE89 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6A DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xFEB JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB80 DUP3 PUSH2 0x111A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB95 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1154 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xBB0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x138C JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBCB DUP3 PUSH2 0x1560 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBDF DUP5 DUP5 DUP5 PUSH2 0x15EE JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF3 DUP3 PUSH2 0x1779 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC05 DUP3 PUSH2 0x17E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1D DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x19B6 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC30 PUSH2 0x211F JUMP JUMPDEST PUSH2 0xC3F DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1CE1 JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC54 PUSH2 0x211F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xCA9 DUP8 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0xC69 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0xC7B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0xC8D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP10 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0xC9F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x138C JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP DUP3 SWAP6 POP POP POP POP PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0xCDF JUMPI INVALID JUMPDEST DUP7 DUP4 MULMOD EQ PUSH2 0xD55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x696E765A206D75737420626520696E7665727365206F66207A00000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0xD88 JUMPI INVALID JUMPDEST DUP8 DUP7 MULMOD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0xDB8 JUMPI INVALID JUMPDEST DUP8 DUP6 MULMOD DUP2 MSTORE POP SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xDD2 PUSH2 0x211F JUMP JUMPDEST PUSH2 0xE33 PUSH1 0x1 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE0D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDF2 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x1E85 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xE3F DUP2 PUSH2 0x1F58 JUMP JUMPDEST PUSH2 0xE83 JUMPI PUSH2 0xE7C DUP2 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0xE53 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x1E85 JUMP JUMPDEST SWAP1 POP PUSH2 0xE36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE94 PUSH2 0x2141 JUMP JUMPDEST PUSH1 0x20 DUP2 PUSH1 0x0 PUSH1 0x6 DUP2 LT PUSH2 0xEA3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x20 DUP2 PUSH1 0x1 PUSH1 0x6 DUP2 LT PUSH2 0xEBB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x20 DUP2 PUSH1 0x2 PUSH1 0x6 DUP2 LT PUSH2 0xED3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x3 PUSH1 0x6 DUP2 LT PUSH2 0xEEA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x4 PUSH1 0x6 DUP2 LT PUSH2 0xF01 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP2 PUSH1 0x5 PUSH1 0x6 DUP2 LT PUSH2 0xF38 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH2 0xF49 PUSH2 0x2163 JUMP JUMPDEST PUSH1 0x20 DUP2 PUSH1 0xC0 DUP5 PUSH1 0x5 PUSH1 0x0 NOT STATICCALL SWAP3 POP PUSH1 0x0 DUP4 EQ ISZERO PUSH2 0xFCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6269674D6F64457870206661696C757265210000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x1 DUP2 LT PUSH2 0xFDB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP7 DUP7 DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1028 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x100D JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP6 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1056 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x103B JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1084 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1069 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10B2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1097 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x114D DUP3 PUSH1 0x2 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F ADD SWAP1 SHR PUSH2 0xE89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x626164207769746E657373000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 DUP7 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x120A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH2 0x1216 JUMPI INVALID JUMPDEST MOD EQ PUSH2 0x1223 JUMPI PUSH1 0x1C PUSH2 0x1226 JUMP JUMPDEST PUSH1 0x1B JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 PUSH2 0x1252 JUMPI INVALID JUMPDEST DUP6 DUP8 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x1260 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD MULMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 SUB PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 PUSH2 0x12B7 JUMPI INVALID JUMPDEST DUP8 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x12C4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP10 MULMOD PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 DUP6 DUP11 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x12E3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x0 SHL DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1343 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP5 POP POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 DUP1 SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x13C5 JUMPI INVALID JUMPDEST DUP10 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB DUP9 ADDMOD SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x1416 JUMPI INVALID JUMPDEST DUP12 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB DUP11 ADDMOD SWAP1 POP PUSH1 0x0 PUSH2 0x144B DUP4 DUP4 DUP6 DUP6 PUSH2 0x1FC9 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x145F DUP9 DUP3 DUP15 DUP9 PUSH2 0x2033 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x1473 DUP9 DUP3 DUP13 DUP8 PUSH2 0x2033 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH1 0x0 PUSH2 0x1489 DUP14 DUP8 DUP12 DUP6 PUSH2 0x2033 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x149D DUP9 DUP3 DUP7 DUP7 PUSH2 0x1FC9 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x14B1 DUP9 DUP3 DUP15 DUP10 PUSH2 0x2033 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP DUP1 DUP3 EQ PUSH2 0x154C JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x14E8 JUMPI INVALID JUMPDEST DUP2 DUP11 MULMOD SWAP9 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x1515 JUMPI INVALID JUMPDEST DUP3 DUP10 MULMOD SWAP8 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x1542 JUMPI INVALID JUMPDEST DUP2 DUP4 MULMOD SWAP7 POP PUSH2 0x1550 JUMP JUMPDEST DUP2 SWAP7 POP JUMPDEST POP POP POP POP POP POP SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x158B JUMPI INVALID JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x15B3 JUMPI INVALID JUMPDEST DUP5 DUP6 MULMOD DUP5 MULMOD SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x15E2 JUMPI INVALID JUMPDEST PUSH1 0x7 DUP3 ADDMOD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x15FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x160C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x2 DUP8 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x1625 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH2 0x1631 JUMPI INVALID JUMPDEST MOD EQ PUSH2 0x163E JUMPI PUSH1 0x1C PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x1B JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 PUSH2 0x166D JUMPI INVALID JUMPDEST DUP4 DUP8 MULMOD PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL DUP5 DUP7 PUSH1 0x0 SHL DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1717 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16FC JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP6 POP POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP2 LT PUSH2 0x17E1 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP PUSH2 0x1789 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0 DUP3 MLOAD EQ PUSH2 0x1860 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77726F6E672070726F6F66206C656E6774680000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1868 PUSH2 0x211F JUMP JUMPDEST PUSH2 0x1870 PUSH2 0x211F JUMP JUMPDEST PUSH2 0x1878 PUSH2 0x2185 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1882 PUSH2 0x211F JUMP JUMPDEST PUSH2 0x188A PUSH2 0x211F JUMP JUMPDEST PUSH1 0x0 DUP9 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH2 0x1A0 DUP2 LT ISZERO PUSH2 0x18A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 DUP3 PUSH1 0x40 ADD SWAP2 SWAP1 DUP3 PUSH1 0x40 ADD SWAP2 SWAP1 DUP3 PUSH1 0x60 ADD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 SWAP2 SWAP1 DUP3 PUSH1 0x40 ADD SWAP2 SWAP1 DUP3 PUSH1 0x40 ADD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP7 SWAP7 POP DUP6 SWAP6 POP DUP5 SWAP5 POP DUP4 SWAP4 POP DUP3 SWAP3 POP DUP2 SWAP2 POP DUP1 SWAP8 POP DUP2 SWAP9 POP DUP3 SWAP10 POP DUP4 SWAP11 POP DUP5 SWAP12 POP DUP6 SWAP13 POP DUP7 SWAP14 POP POP POP POP POP POP POP POP PUSH2 0x194D DUP8 DUP8 DUP8 PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH2 0x191B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x1 PUSH1 0x3 DUP2 LT PUSH2 0x192D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP10 PUSH1 0x2 PUSH1 0x3 DUP2 LT PUSH2 0x193F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP10 DUP10 DUP10 DUP10 PUSH2 0x19B6 JUMP JUMPDEST PUSH1 0x3 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1984 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1969 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP8 POP POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19BF DUP10 PUSH2 0x1F58 JUMP JUMPDEST PUSH2 0x1A31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7075626C6963206B6579206973206E6F74206F6E206375727665000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A3A DUP9 PUSH2 0x1F58 JUMP JUMPDEST PUSH2 0x1AAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x67616D6D61206973206E6F74206F6E2063757276650000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AB5 DUP4 PUSH2 0x1F58 JUMP JUMPDEST PUSH2 0x1B27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6347616D6D615769746E657373206973206E6F74206F6E206375727665000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B30 DUP3 PUSH2 0x1F58 JUMP JUMPDEST PUSH2 0x1BA2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x73486173685769746E657373206973206E6F74206F6E20637572766500000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BAE DUP8 DUP11 DUP9 DUP8 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x1C20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6164647228632A706B2B732A6729E289A05F755769746E657373000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C28 PUSH2 0x211F JUMP JUMPDEST PUSH2 0x1C32 DUP11 DUP8 PUSH2 0xDCA JUMP JUMPDEST SWAP1 POP PUSH2 0x1C3C PUSH2 0x211F JUMP JUMPDEST PUSH2 0x1C4B DUP10 DUP12 DUP8 DUP12 DUP7 DUP10 DUP10 PUSH2 0x1CE1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C5C DUP4 DUP14 DUP14 DUP11 DUP7 PUSH2 0xFEB JUMP JUMPDEST SWAP1 POP DUP1 DUP11 EQ PUSH2 0x1CD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x696E76616C69642070726F6F6600000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1CE9 PUSH2 0x211F JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP5 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x1D19 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x1D2B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD SUB DUP2 PUSH2 0x1D38 JUMPI INVALID JUMPDEST MOD EQ ISZERO PUSH2 0x1DAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x706F696E747320696E2073756D206D7573742062652064697374696E63740000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DB8 DUP8 DUP10 DUP9 PUSH2 0x15EE JUMP JUMPDEST PUSH2 0x1E0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x21A8 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E18 DUP5 DUP7 DUP6 PUSH2 0x15EE JUMP JUMPDEST PUSH2 0x1E6D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x21C9 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E78 DUP7 DUP5 DUP5 PUSH2 0xC4C JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E8D PUSH2 0x211F JUMP JUMPDEST PUSH2 0x1E96 DUP3 PUSH2 0x1779 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x1EA3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x1ECE PUSH2 0x1EC9 DUP3 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x1EBF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x1560 JUMP JUMPDEST PUSH2 0x111A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x1EDB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0x2 DUP3 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x1EF5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH2 0x1F01 JUMPI INVALID JUMPDEST MOD EQ ISZERO PUSH2 0x1F53 JUMPI DUP1 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x1F15 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB DUP2 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x1F49 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x1F82 JUMPI INVALID JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x1F8F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x1FA1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD MULMOD PUSH2 0x1FC1 DUP4 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x1FB7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x1560 JUMP JUMPDEST EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x1FF4 JUMPI INVALID JUMPDEST DUP5 DUP8 MULMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x201F JUMPI INVALID JUMPDEST DUP5 DUP8 MULMOD DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x2060 JUMPI INVALID JUMPDEST DUP8 DUP6 MULMOD SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x208F JUMPI INVALID JUMPDEST DUP8 DUP8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB MULMOD SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x20DE JUMPI INVALID JUMPDEST DUP2 DUP4 ADDMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x2109 JUMPI INVALID JUMPDEST DUP7 DUP10 MULMOD DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP INVALID CHAINID PUSH10 0x727374206D756C746970 PUSH13 0x69636174696F6E20636865636B KECCAK256 PUSH7 0x61696C65645365 PUSH4 0x6F6E6420 PUSH14 0x756C7469706C69636174696F6E20 PUSH4 0x6865636B KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x7066735822122059895A 0xE6 DUP13 DUP4 0xC1 PUSH5 0x3D4051DAF2 0xCE PUSH21 0x2530F14B7DC90D7BB99FE8210F7273A72664736F6C PUSH4 0x43000602 STOP CALLER ",
				"sourceMap": "240:2378:33:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;240:2378:33;;;;;;;"
			},
			"deployedBytecode": {
				"linkReferences": {},
				"object": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c806395e6ee921161008c578063b481e26011610066578063b481e2601461067f578063cefda0c51461074e578063ef3b10ec1461081d578063fe54f2a21461098e576100cf565b806395e6ee92146105075780639d6f033714610575578063aa7b2fbb146105b7576100cf565b8063244f896d146100d457806335452450146101c05780635de600421461026b5780637f8f50a8146102b75780638af046ea1461041457806391d5f69114610456575b600080fd5b610182600480360360a08110156100ea57600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080359060200190929190505050610b11565b6040518082600260200280838360005b838110156101ad578082015181840152602081019050610192565b5050505090500191505060405180910390f35b61022d600480360360608110156101d657600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080359060200190929190505050610b2d565b6040518082600260200280838360005b8381101561025857808201518184015260208101905061023d565b5050505090500191505060405180910390f35b6102a16004803603604081101561028157600080fd5b810190808035906020019092919080359060200190929190505050610b47565b6040518082815260200191505060405180910390f35b6103fe60048036036101208110156102ce57600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050610b5b565b6040518082815260200191505060405180910390f35b6104406004803603602081101561042a57600080fd5b8101908080359060200190929190505050610b75565b6040518082815260200191505060405180910390f35b6104ed600480360360a081101561046c57600080fd5b810190808035906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b87565b604051808215151515815260200191505060405180910390f35b6105516004803603608081101561051d57600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190505050610b9f565b60405180848152602001838152602001828152602001935050505060405180910390f35b6105a16004803603602081101561058b57600080fd5b8101908080359060200190929190505050610bc0565b6040518082815260200191505060405180910390f35b610665600480360360a08110156105cd57600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908035906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050610bd2565b604051808215151515815260200191505060405180910390f35b6107386004803603602081101561069557600080fd5b81019080803590602001906401000000008111156106b257600080fd5b8201836020820111156106c457600080fd5b803590602001918460018302840111640100000000831117156106e657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610be8565b6040518082815260200191505060405180910390f35b6108076004803603602081101561076457600080fd5b810190808035906020019064010000000081111561078157600080fd5b82018360208201111561079357600080fd5b803590602001918460018302840111640100000000831117156107b557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610bfa565b6040518082815260200191505060405180910390f35b61098c60048036036101a081101561083457600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080359060200190929190505050610c0c565b005b610ad360048036036101608110156109a557600080fd5b810190808035906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908035906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080359060200190929190505050610c28565b6040518082600260200280838360005b83811015610afe578082015181840152602081019050610ae3565b5050505090500191505060405180910390f35b610b1961211f565b610b24848484610c4c565b90509392505050565b610b3561211f565b610b3f8383610dca565b905092915050565b6000610b538383610e89565b905092915050565b6000610b6a8686868686610feb565b905095945050505050565b6000610b808261111a565b9050919050565b6000610b9585858585611154565b9050949350505050565b6000806000610bb08787878761138c565b9250925092509450945094915050565b6000610bcb82611560565b9050919050565b6000610bdf8484846115ee565b90509392505050565b6000610bf382611779565b9050919050565b6000610c05826117e6565b9050919050565b610c1d8989898989898989896119b6565b505050505050505050565b610c3061211f565b610c3f88888888888888611ce1565b9050979650505050505050565b610c5461211f565b6000806000610ca987600060028110610c6957fe5b602002015188600160028110610c7b57fe5b602002015188600060028110610c8d57fe5b602002015189600160028110610c9f57fe5b602002015161138c565b80935081945082955050505060017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80610cdf57fe5b86830914610d55576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f696e765a206d75737420626520696e7665727365206f66207a0000000000000081525060200191505060405180910390fd5b60405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80610d8857fe5b87860981526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80610db857fe5b87850981525093505050509392505050565b610dd261211f565b610e33600184846040516020018084815260200183600260200280838360005b83811015610e0d578082015181840152602081019050610df2565b505050509050018281526020019350505050604051602081830303815290604052611e85565b90505b610e3f81611f58565b610e8357610e7c81600060028110610e5357fe5b602002015160405160200180828152602001915050604051602081830303815290604052611e85565b9050610e36565b92915050565b600080610e94612141565b602081600060068110610ea357fe5b602002018181525050602081600160068110610ebb57fe5b602002018181525050602081600260068110610ed357fe5b6020020181815250508481600360068110610eea57fe5b6020020181815250508381600460068110610f0157fe5b6020020181815250507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f81600560068110610f3857fe5b602002018181525050610f49612163565b60208160c0846005600019fa92506000831415610fce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6269674d6f64457870206661696c75726521000000000000000000000000000081525060200191505060405180910390fd5b80600060018110610fdb57fe5b6020020151935050505092915050565b6000600286868685876040516020018087815260200186600260200280838360005b8381101561102857808201518184015260208101905061100d565b5050505090500185600260200280838360005b8381101561105657808201518184015260208101905061103b565b5050505090500184600260200280838360005b83811015611084578082015181840152602081019050611069565b5050505090500183600260200280838360005b838110156110b2578082015181840152602081019050611097565b505050509050018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140196505050505050506040516020818303038152906040528051906020012060001c905095945050505050565b600061114d82600260017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f01901c610e89565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f626164207769746e65737300000000000000000000000000000000000000000081525060200191505060405180910390fd5b60008060028660016002811061120a57fe5b60200201518161121657fe5b061461122357601c611226565b601b5b905060007ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd03641418061125257fe5b858760006002811061126057fe5b6020020151097ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd03641410360001b905060007ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141806112b757fe5b876000600281106112c457fe5b6020020151890960001b90506000600183858a6000600281106112e357fe5b602002015160001b8560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611343573d6000803e3d6000fd5b5050506020604051035190508573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614945050505050949350505050565b60008060008060006001809150915060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f806113c557fe5b897ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f038808905060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8061141657fe5b8b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f038a089050600061144b83838585611fc9565b809250819950505061145f88828e88612033565b809250819950505061147388828c87612033565b809250819950505060006114898d878b85612033565b809250819950505061149d88828686611fc9565b80925081995050506114b188828e89612033565b809250819950505080821461154c577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f806114e857fe5b818a0998507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8061151557fe5b82890997507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8061154257fe5b8183099650611550565b8196505b5050505050509450945094915050565b6000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8061158b57fe5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f806115b357fe5b848509840990507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f806115e257fe5b60078208915050919050565b6000808314156115fd57600080fd5b60008460006002811061160c57fe5b6020020151905060008060028760016002811061162557fe5b60200201518161163157fe5b061461163e57601c611641565b601b5b905060007ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd03641418061166d57fe5b83870960001b9050600060016000801b848660001b8560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156116da573d6000803e3d6000fd5b5050506020604051035190506000866040516020018082600260200280838360005b838110156117175780820151818401526020810190506116fc565b505050509050019150506040516020818303038152906040528051906020012060001c90508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614955050505050509392505050565b6000818051906020012060001c90505b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f81106117e15780604051602001808281526020019150506040516020818303038152906040528051906020012060001c9050611789565b919050565b60006101a0825114611860576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f77726f6e672070726f6f66206c656e677468000000000000000000000000000081525060200191505060405180910390fd5b61186861211f565b61187061211f565b611878612185565b600061188261211f565b61188a61211f565b6000888060200190516101a08110156118a257600080fd5b810190809190826040019190826040019190826060018051906020019092919091908260400191908260400180519060200190929190505050869650859550849450839350829250819150809750819850829950839a50849b50859c50869d505050505050505061194d87878760006003811061191b57fe5b60200201518860016003811061192d57fe5b60200201518960026003811061193f57fe5b6020020151898989896119b6565b6003866040516020018083815260200182600260200280838360005b83811015611984578082015181840152602081019050611969565b50505050905001925050506040516020818303038152906040528051906020012060001c975050505050505050919050565b6119bf89611f58565b611a31576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f7075626c6963206b6579206973206e6f74206f6e20637572766500000000000081525060200191505060405180910390fd5b611a3a88611f58565b611aac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f67616d6d61206973206e6f74206f6e206375727665000000000000000000000081525060200191505060405180910390fd5b611ab583611f58565b611b27576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6347616d6d615769746e657373206973206e6f74206f6e20637572766500000081525060200191505060405180910390fd5b611b3082611f58565b611ba2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f73486173685769746e657373206973206e6f74206f6e2063757276650000000081525060200191505060405180910390fd5b611bae878a8887611154565b611c20576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f6164647228632a706b2b732a6729e289a05f755769746e65737300000000000081525060200191505060405180910390fd5b611c2861211f565b611c328a87610dca565b9050611c3c61211f565b611c4b898b878b868989611ce1565b90506000611c5c838d8d8a86610feb565b9050808a14611cd3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f696e76616c69642070726f6f660000000000000000000000000000000000000081525060200191505060405180910390fd5b505050505050505050505050565b611ce961211f565b60007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f84600060028110611d1957fe5b602002015188600060028110611d2b57fe5b60200201510381611d3857fe5b061415611dad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f706f696e747320696e2073756d206d7573742062652064697374696e6374000081525060200191505060405180910390fd5b611db88789886115ee565b611e0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806121a86021913960400191505060405180910390fd5b611e188486856115ee565b611e6d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806121c96022913960400191505060405180910390fd5b611e78868484610c4c565b9050979650505050505050565b611e8d61211f565b611e9682611779565b81600060028110611ea357fe5b602002018181525050611ece611ec982600060028110611ebf57fe5b6020020151611560565b61111a565b81600160028110611edb57fe5b6020020181815250506001600282600160028110611ef557fe5b602002015181611f0157fe5b061415611f535780600160028110611f1557fe5b60200201517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f0381600160028110611f4957fe5b6020020181815250505b919050565b60007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80611f8257fe5b82600160028110611f8f57fe5b602002015183600160028110611fa157fe5b602002015109611fc183600060028110611fb757fe5b6020020151611560565b149050919050565b6000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80611ff457fe5b8487097ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8061201f57fe5b848709809250819350505094509492505050565b60008060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8061206057fe5b878509905060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8061208f57fe5b87877ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f030990507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f806120de57fe5b8183087ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8061210957fe5b8689098094508195505050505094509492505050565b6040518060400160405280600290602082028038833980820191505090505090565b6040518060c00160405280600690602082028038833980820191505090505090565b6040518060200160405280600190602082028038833980820191505090505090565b604051806060016040528060039060208202803883398082019150509050509056fe4669727374206d756c7469706c69636174696f6e20636865636b206661696c65645365636f6e64206d756c7469706c69636174696f6e20636865636b206661696c6564a264697066735822122059895ae68c83c1643d4051daf2ce742530f14b7dc90d7bb99fe8210f7273a72664736f6c63430006020033",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95E6EE92 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xB481E260 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB481E260 EQ PUSH2 0x67F JUMPI DUP1 PUSH4 0xCEFDA0C5 EQ PUSH2 0x74E JUMPI DUP1 PUSH4 0xEF3B10EC EQ PUSH2 0x81D JUMPI DUP1 PUSH4 0xFE54F2A2 EQ PUSH2 0x98E JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x95E6EE92 EQ PUSH2 0x507 JUMPI DUP1 PUSH4 0x9D6F0337 EQ PUSH2 0x575 JUMPI DUP1 PUSH4 0xAA7B2FBB EQ PUSH2 0x5B7 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x244F896D EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x35452450 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x5DE60042 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x7F8F50A8 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x8AF046EA EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0x91D5F691 EQ PUSH2 0x456 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x192 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x258 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x23D JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x120 DUP2 LT ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x551 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x58B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x665 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x5CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0xBD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x738 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x695 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x6B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x6E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x807 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x781 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x793 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x7B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0xBFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x98C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x1A0 DUP2 LT ISZERO PUSH2 0x834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC0C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x160 DUP2 LT ISZERO PUSH2 0x9A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAFE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAE3 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB19 PUSH2 0x211F JUMP JUMPDEST PUSH2 0xB24 DUP5 DUP5 DUP5 PUSH2 0xC4C JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB35 PUSH2 0x211F JUMP JUMPDEST PUSH2 0xB3F DUP4 DUP4 PUSH2 0xDCA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB53 DUP4 DUP4 PUSH2 0xE89 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6A DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xFEB JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB80 DUP3 PUSH2 0x111A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB95 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1154 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xBB0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x138C JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBCB DUP3 PUSH2 0x1560 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBDF DUP5 DUP5 DUP5 PUSH2 0x15EE JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF3 DUP3 PUSH2 0x1779 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC05 DUP3 PUSH2 0x17E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1D DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x19B6 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC30 PUSH2 0x211F JUMP JUMPDEST PUSH2 0xC3F DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1CE1 JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC54 PUSH2 0x211F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xCA9 DUP8 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0xC69 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0xC7B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0xC8D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP10 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0xC9F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x138C JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP DUP3 SWAP6 POP POP POP POP PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0xCDF JUMPI INVALID JUMPDEST DUP7 DUP4 MULMOD EQ PUSH2 0xD55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x696E765A206D75737420626520696E7665727365206F66207A00000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0xD88 JUMPI INVALID JUMPDEST DUP8 DUP7 MULMOD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0xDB8 JUMPI INVALID JUMPDEST DUP8 DUP6 MULMOD DUP2 MSTORE POP SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xDD2 PUSH2 0x211F JUMP JUMPDEST PUSH2 0xE33 PUSH1 0x1 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE0D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDF2 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x1E85 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xE3F DUP2 PUSH2 0x1F58 JUMP JUMPDEST PUSH2 0xE83 JUMPI PUSH2 0xE7C DUP2 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0xE53 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x1E85 JUMP JUMPDEST SWAP1 POP PUSH2 0xE36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE94 PUSH2 0x2141 JUMP JUMPDEST PUSH1 0x20 DUP2 PUSH1 0x0 PUSH1 0x6 DUP2 LT PUSH2 0xEA3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x20 DUP2 PUSH1 0x1 PUSH1 0x6 DUP2 LT PUSH2 0xEBB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x20 DUP2 PUSH1 0x2 PUSH1 0x6 DUP2 LT PUSH2 0xED3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x3 PUSH1 0x6 DUP2 LT PUSH2 0xEEA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x4 PUSH1 0x6 DUP2 LT PUSH2 0xF01 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP2 PUSH1 0x5 PUSH1 0x6 DUP2 LT PUSH2 0xF38 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH2 0xF49 PUSH2 0x2163 JUMP JUMPDEST PUSH1 0x20 DUP2 PUSH1 0xC0 DUP5 PUSH1 0x5 PUSH1 0x0 NOT STATICCALL SWAP3 POP PUSH1 0x0 DUP4 EQ ISZERO PUSH2 0xFCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6269674D6F64457870206661696C757265210000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x1 DUP2 LT PUSH2 0xFDB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP7 DUP7 DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1028 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x100D JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP6 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1056 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x103B JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1084 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1069 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10B2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1097 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x114D DUP3 PUSH1 0x2 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F ADD SWAP1 SHR PUSH2 0xE89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x626164207769746E657373000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 DUP7 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x120A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH2 0x1216 JUMPI INVALID JUMPDEST MOD EQ PUSH2 0x1223 JUMPI PUSH1 0x1C PUSH2 0x1226 JUMP JUMPDEST PUSH1 0x1B JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 PUSH2 0x1252 JUMPI INVALID JUMPDEST DUP6 DUP8 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x1260 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD MULMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 SUB PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 PUSH2 0x12B7 JUMPI INVALID JUMPDEST DUP8 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x12C4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP10 MULMOD PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 DUP6 DUP11 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x12E3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x0 SHL DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1343 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP5 POP POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 DUP1 SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x13C5 JUMPI INVALID JUMPDEST DUP10 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB DUP9 ADDMOD SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x1416 JUMPI INVALID JUMPDEST DUP12 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB DUP11 ADDMOD SWAP1 POP PUSH1 0x0 PUSH2 0x144B DUP4 DUP4 DUP6 DUP6 PUSH2 0x1FC9 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x145F DUP9 DUP3 DUP15 DUP9 PUSH2 0x2033 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x1473 DUP9 DUP3 DUP13 DUP8 PUSH2 0x2033 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH1 0x0 PUSH2 0x1489 DUP14 DUP8 DUP12 DUP6 PUSH2 0x2033 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x149D DUP9 DUP3 DUP7 DUP7 PUSH2 0x1FC9 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x14B1 DUP9 DUP3 DUP15 DUP10 PUSH2 0x2033 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP DUP1 DUP3 EQ PUSH2 0x154C JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x14E8 JUMPI INVALID JUMPDEST DUP2 DUP11 MULMOD SWAP9 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x1515 JUMPI INVALID JUMPDEST DUP3 DUP10 MULMOD SWAP8 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x1542 JUMPI INVALID JUMPDEST DUP2 DUP4 MULMOD SWAP7 POP PUSH2 0x1550 JUMP JUMPDEST DUP2 SWAP7 POP JUMPDEST POP POP POP POP POP POP SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x158B JUMPI INVALID JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x15B3 JUMPI INVALID JUMPDEST DUP5 DUP6 MULMOD DUP5 MULMOD SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x15E2 JUMPI INVALID JUMPDEST PUSH1 0x7 DUP3 ADDMOD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x15FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x160C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x2 DUP8 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x1625 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH2 0x1631 JUMPI INVALID JUMPDEST MOD EQ PUSH2 0x163E JUMPI PUSH1 0x1C PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x1B JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 PUSH2 0x166D JUMPI INVALID JUMPDEST DUP4 DUP8 MULMOD PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL DUP5 DUP7 PUSH1 0x0 SHL DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1717 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16FC JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP6 POP POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP2 LT PUSH2 0x17E1 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP PUSH2 0x1789 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0 DUP3 MLOAD EQ PUSH2 0x1860 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77726F6E672070726F6F66206C656E6774680000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1868 PUSH2 0x211F JUMP JUMPDEST PUSH2 0x1870 PUSH2 0x211F JUMP JUMPDEST PUSH2 0x1878 PUSH2 0x2185 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1882 PUSH2 0x211F JUMP JUMPDEST PUSH2 0x188A PUSH2 0x211F JUMP JUMPDEST PUSH1 0x0 DUP9 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH2 0x1A0 DUP2 LT ISZERO PUSH2 0x18A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 DUP3 PUSH1 0x40 ADD SWAP2 SWAP1 DUP3 PUSH1 0x40 ADD SWAP2 SWAP1 DUP3 PUSH1 0x60 ADD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 SWAP2 SWAP1 DUP3 PUSH1 0x40 ADD SWAP2 SWAP1 DUP3 PUSH1 0x40 ADD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP7 SWAP7 POP DUP6 SWAP6 POP DUP5 SWAP5 POP DUP4 SWAP4 POP DUP3 SWAP3 POP DUP2 SWAP2 POP DUP1 SWAP8 POP DUP2 SWAP9 POP DUP3 SWAP10 POP DUP4 SWAP11 POP DUP5 SWAP12 POP DUP6 SWAP13 POP DUP7 SWAP14 POP POP POP POP POP POP POP POP PUSH2 0x194D DUP8 DUP8 DUP8 PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH2 0x191B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x1 PUSH1 0x3 DUP2 LT PUSH2 0x192D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP10 PUSH1 0x2 PUSH1 0x3 DUP2 LT PUSH2 0x193F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP10 DUP10 DUP10 DUP10 PUSH2 0x19B6 JUMP JUMPDEST PUSH1 0x3 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1984 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1969 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP8 POP POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19BF DUP10 PUSH2 0x1F58 JUMP JUMPDEST PUSH2 0x1A31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7075626C6963206B6579206973206E6F74206F6E206375727665000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A3A DUP9 PUSH2 0x1F58 JUMP JUMPDEST PUSH2 0x1AAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x67616D6D61206973206E6F74206F6E2063757276650000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AB5 DUP4 PUSH2 0x1F58 JUMP JUMPDEST PUSH2 0x1B27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6347616D6D615769746E657373206973206E6F74206F6E206375727665000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B30 DUP3 PUSH2 0x1F58 JUMP JUMPDEST PUSH2 0x1BA2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x73486173685769746E657373206973206E6F74206F6E20637572766500000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BAE DUP8 DUP11 DUP9 DUP8 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x1C20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6164647228632A706B2B732A6729E289A05F755769746E657373000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C28 PUSH2 0x211F JUMP JUMPDEST PUSH2 0x1C32 DUP11 DUP8 PUSH2 0xDCA JUMP JUMPDEST SWAP1 POP PUSH2 0x1C3C PUSH2 0x211F JUMP JUMPDEST PUSH2 0x1C4B DUP10 DUP12 DUP8 DUP12 DUP7 DUP10 DUP10 PUSH2 0x1CE1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C5C DUP4 DUP14 DUP14 DUP11 DUP7 PUSH2 0xFEB JUMP JUMPDEST SWAP1 POP DUP1 DUP11 EQ PUSH2 0x1CD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x696E76616C69642070726F6F6600000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1CE9 PUSH2 0x211F JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP5 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x1D19 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x1D2B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD SUB DUP2 PUSH2 0x1D38 JUMPI INVALID JUMPDEST MOD EQ ISZERO PUSH2 0x1DAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x706F696E747320696E2073756D206D7573742062652064697374696E63740000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DB8 DUP8 DUP10 DUP9 PUSH2 0x15EE JUMP JUMPDEST PUSH2 0x1E0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x21A8 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E18 DUP5 DUP7 DUP6 PUSH2 0x15EE JUMP JUMPDEST PUSH2 0x1E6D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x21C9 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E78 DUP7 DUP5 DUP5 PUSH2 0xC4C JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E8D PUSH2 0x211F JUMP JUMPDEST PUSH2 0x1E96 DUP3 PUSH2 0x1779 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x1EA3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x1ECE PUSH2 0x1EC9 DUP3 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x1EBF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x1560 JUMP JUMPDEST PUSH2 0x111A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x1EDB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0x2 DUP3 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x1EF5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH2 0x1F01 JUMPI INVALID JUMPDEST MOD EQ ISZERO PUSH2 0x1F53 JUMPI DUP1 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x1F15 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB DUP2 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x1F49 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x1F82 JUMPI INVALID JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x1F8F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x1FA1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD MULMOD PUSH2 0x1FC1 DUP4 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x1FB7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x1560 JUMP JUMPDEST EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x1FF4 JUMPI INVALID JUMPDEST DUP5 DUP8 MULMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x201F JUMPI INVALID JUMPDEST DUP5 DUP8 MULMOD DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x2060 JUMPI INVALID JUMPDEST DUP8 DUP6 MULMOD SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x208F JUMPI INVALID JUMPDEST DUP8 DUP8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB MULMOD SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x20DE JUMPI INVALID JUMPDEST DUP2 DUP4 ADDMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x2109 JUMPI INVALID JUMPDEST DUP7 DUP10 MULMOD DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP INVALID CHAINID PUSH10 0x727374206D756C746970 PUSH13 0x69636174696F6E20636865636B KECCAK256 PUSH7 0x61696C65645365 PUSH4 0x6F6E6420 PUSH14 0x756C7469706C69636174696F6E20 PUSH4 0x6865636B KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x7066735822122059895A 0xE6 DUP13 DUP4 0xC1 PUSH5 0x3D4051DAF2 0xCE PUSH21 0x2530F14B7DC90D7BB99FE8210F7273A72664736F6C PUSH4 0x43000602 STOP CALLER ",
				"sourceMap": "240:2378:33:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;240:2378:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1190:169;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1190:169:33;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1190:169:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1190:169:33;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1190:169:33;;;;;;;;;;;;;;;;713:136;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;713:136:33;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;713:136:33;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;713:136:33;;;;;;;;;;;;;;;;274:131;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;274:131:33;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1877:247;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1877:247:33;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1877:247:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1877:247:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1877:247:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1877:247:33;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;408:99;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;408:99:33;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1362:216;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1362:216:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1362:216:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1011:176;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1011:176:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;510:95;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;510:95:33;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;852:156;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;852:156:33;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;852:156:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;852:156:33;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;608:102;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;608:102:33;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;608:102:33;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;608:102:33;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;608:102:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;608:102:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2467:149;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2467:149:33;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2467:149:33;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2467:149:33;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2467:149:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2467:149:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2127:337;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2127:337:33;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2127:337:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2127:337:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2127:337:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2127:337:33;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1581:293;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1581:293:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1581:293:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1581:293:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1581:293:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1581:293:33;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1581:293:33;;;;;;;;;;;;;;;;1190:169;1291:17;;:::i;:::-;1323:31;1341:2;1345;1349:4;1323:17;:31::i;:::-;1316:38;;1190:169;;;;;:::o;713:136::-;788:17;;:::i;:::-;820:24;838:2;842:1;820:17;:24::i;:::-;813:31;;713:136;;;;:::o;274:131::-;347:7;369:31;385:4;391:8;369:15;:31::i;:::-;362:38;;274:131;;;;:::o;1877:247::-;2040:7;2062:57;2090:4;2096:2;2100:5;2107:8;2117:1;2062:27;:57::i;:::-;2055:64;;1877:247;;;;;;;:::o;408:99::-;461:7;483:19;500:1;483:16;:19::i;:::-;476:26;;408:99;;;:::o;1362:216::-;1492:4;1511:62;1554:1;1557;1560;1563:9;1511:42;:62::i;:::-;1504:69;;1362:216;;;;;;:::o;1011:176::-;1105:7;1114;1123;1145:37;1167:2;1171;1175;1179;1145:21;:37::i;:::-;1138:44;;;;;;1011:176;;;;;;;;:::o;510:95::-;561:7;583:17;598:1;583:14;:17::i;:::-;576:24;;510:95;;;:::o;852:156::-;953:4;972:31;990:1;993:6;1001:1;972:17;:31::i;:::-;965:38;;852:156;;;;;:::o;608:102::-;665:7;687:18;703:1;687:15;:18::i;:::-;680:25;;608:102;;;:::o;2467:149::-;2546:14;2575:36;2605:5;2575:29;:36::i;:::-;2568:43;;2467:149;;;:::o;2127:337::-;2369:88;2390:2;2394:5;2401:1;2404;2407:4;2413:8;2423:13;2438:12;2452:4;2369:20;:88::i;:::-;2127:337;;;;;;;;;:::o;1581:293::-;1770:17;;:::i;:::-;1802:67;1826:1;1829:2;1833:10;1845:1;1848:2;1852:10;1864:4;1802:23;:67::i;:::-;1795:74;;1581:293;;;;;;;;;:::o;18233:519:6:-;18344:17;;:::i;:::-;18369:9;18384;18399;18426:43;18442:2;18445:1;18442:5;;;;;;;;;;;18449:2;18452:1;18449:5;;;;;;;;;;;18456:2;18459:1;18456:5;;;;;;;;;;;18463:2;18466:1;18463:5;;;;;;;;;;;18426:15;:43::i;:::-;18414:55;;;;;;;;;;;;18514:1;7587:66;18483:27;;;;;18493:4;18490:1;18483:27;:32;18475:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18682:65;;;;;;;;7587:66;18690:27;;;;;18700:4;18697:1;18690:27;18682:65;;;;7587:66;18719:27;;;;;18729:4;18726:1;18719:27;18682:65;;;;;;;;18233:519;;;;;:::o;11831:369::-;11916:20;;:::i;:::-;11951:137;11057:1;12077:2;12081:5;11978:109;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11978:109:6;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;11978:109:6;;;11951:26;:137::i;:::-;11946:142;;12096:98;12104:13;12114:2;12104:9;:13::i;:::-;12096:98;;12134:51;12178:2;12181:1;12178:5;;;;;;;;;;;12161:23;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;12161:23:6;;;12134:26;:51::i;:::-;12129:56;;12096:98;;;11831:369;;;;:::o;7826:1072::-;7904:22;7936:18;7962:41;;:::i;:::-;7702:4;8011:23;8035:1;8011:26;;;;;;;;;;:46;;;;;7702:4;8084:23;8108:1;8084:26;;;;;;;;;;:46;;;;;7702:4;8161:23;8185:1;8161:26;;;;;;;;;;:46;;;;;8266:4;8237:23;8261:1;8237:26;;;;;;;;;;:33;;;;;8307:8;8278:23;8302:1;8278:26;;;;;;;;;;:37;;;;;7587:66;8323:23;8347:1;8323:26;;;;;;;;;;:39;;;;;8370:24;;:::i;:::-;8740:4;8724:6;8649:4;8616:23;8552:4;8500:1;8496:6;8476:325;8462:339;;8834:1;8820:10;:15;8816:52;;;8838:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8816:52;8882:6;8889:1;8882:9;;;;;;;;;;;8875:16;;;;;7826:1072;;;;:::o;21877:358::-;22054:9;21158:1;22197:4;22203:2;22207:5;22214:1;22217:8;22107:119;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;22107:119:6;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;22107:119:6;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;22107:119:6;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;22107:119:6;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;22107:119:6;;;22097:130;;;;;;22080:148;;22073:155;;21877:358;;;;;;;:::o;9197:105::-;9251:7;9273:24;9283:1;9131;9125;7587:66;9112:14;9111:21;;9273:9;:24::i;:::-;9266:31;;9197:105;;;:::o;18871:1044::-;19011:4;19120:1;19099:23;;:9;:23;;;;19091:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19146:7;19169:1;19164;19157;19159;19157:4;;;;;;;;;;;:8;;;;;;:13;19156:25;;19179:2;19156:25;;;19174:2;19156:25;19146:35;;19218:18;7353:66;19261:28;;;;;19274:1;19268;19270;19268:4;;;;;;;;;;;19261:28;7353:66;19247:42;19239:51;;19218:72;;19309:23;7353:66;19343:28;;;;;19353:1;19355;19353:4;;;;;;;;;;;19350:1;19343:28;19335:37;;19309:63;;19797:16;19816:56;19826:10;19838:1;19849;19851;19849:4;;;;;;;;;;;19841:13;;19856:15;19816:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19816:56:6;;;;;;;;19797:75;;19899:9;19887:21;;:8;:21;;;19880:28;;;;;;18871:1044;;;;;;:::o;15968:1996::-;16067:10;16079;16091;16782;16794;16809:1;16812;16781:33;;;;16891:10;7587:66;16904:39;;;;;16928:2;7587:66;16915:15;16911:2;16904:39;16891:52;;16951:10;7587:66;16964:39;;;;;16988:2;7587:66;16975:15;16971:2;16964:39;16951:52;;17012:10;17126:29;17140:2;17144;17148;17152;17126:13;:29::i;:::-;17115:40;;;;;;;;17197:29;17211:2;17215;17219;17223;17197:13;:29::i;:::-;17186:40;;;;;;;;17271:29;17285:2;17289;17293;17297;17271:13;:29::i;:::-;17260:40;;;;;;;;17338:10;17454:29;17468:2;17472;17476;17480;17454:13;:29::i;:::-;17443:40;;;;;;;;17511:29;17525:2;17529;17533;17537;17511:13;:29::i;:::-;17500:40;;;;;;;;17587:29;17601:2;17605;17609;17613;17587:13;:29::i;:::-;17576:40;;;;;;;;17666:2;17660;:8;17656:302;;7587:66;17747:26;;;;;17758:2;17754;17747:26;17742:31;;7587:66;17788:26;;;;;17799:2;17795;17788:26;17783:31;;7587:66;17829:26;;;;;17840:2;17836;17829:26;17824:31;;17656:302;;;17947:2;17942:7;;17656:302;15968:1996;;;;;;;;;;;;;;:::o;9362:259::-;9414:7;9510:14;7587:66;9527:47;;;;;7587:66;9537:24;;;;;9547:1;9544;9537:24;9534:1;9527:47;9510:64;;7587:66;9587:29;;;;;9602:1;9594:6;9587:29;9580:36;;;9362:259;;;:::o;12692:978::-;12814:13;12855:1;12845:6;:11;;12837:20;;;;;;12902:9;12914:12;12927:1;12914:15;;;;;;;;;;;12902:27;;12965:7;12998:1;12993;12975:12;12988:1;12975:15;;;;;;;;;;;:19;;;;;;:24;:34;;13007:2;12975:34;;;13002:2;12975:34;12965:44;;13358:20;7353:66;13389:30;;;;;13404:1;13396:6;13389:30;13381:39;;13358:62;;13426:14;13443:50;13461:1;13453:10;;13465:1;13476;13468:10;;13480:12;13443:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13443:50:6;;;;;;;;13426:67;;13559:16;13621:7;13604:25;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13604:25:6;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;13604:25:6;;;13594:36;;;;;;13586:45;;13559:73;;13656:8;13646:18;;:6;:18;;;13638:27;;;;;;;12692:978;;;;;:::o;9847:394::-;9905:10;9946:1;9936:12;;;;;;9928:21;;9923:26;;10152:85;7587:66;10159:2;:16;10152:85;;10225:2;10208:20;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;10208:20:6;;;10198:31;;;;;;10190:40;;10185:45;;10152:85;;;9847:394;;;:::o;25549:997::-;25629:14;24630:315;25661:5;:12;:28;25653:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25721:20;;:::i;:::-;25794:23;;:::i;:::-;25903:24;;:::i;:::-;25935:16;25959:31;;:::i;:::-;25998:30;;:::i;:::-;26036:12;26143:5;26123:122;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;26123:122:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26056:189;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26253:201;26277:2;26289:5;26304:6;26311:1;26304:9;;;;;;;;;;;26328:6;26335:1;26328:9;;;;;;;;;;;26352:6;26359:1;26352:9;;;;;;;;;;;26379:8;26397:13;26420:12;26442:4;26253:14;:201::i;:::-;24518:1;26531:5;26489:48;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;26489:48:6;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;26489:48:6;;;26479:59;;;;;;26471:68;;26462:77;;25549:997;;;;;;;;;;:::o;22818:1521::-;23069:13;23079:2;23069:9;:13::i;:::-;23061:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23129:16;23139:5;23129:9;:16::i;:::-;23121:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23187:24;23197:13;23187:9;:24::i;:::-;23179:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23261:23;23271:12;23261:9;:23::i;:::-;23253:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23719:56;23756:1;23759:2;23763:1;23766:8;23719:36;:56::i;:::-;23702:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23916:22;;:::i;:::-;23941:21;23953:2;23957:4;23941:11;:21::i;:::-;23916:46;;24054:19;;:::i;:::-;24076:80;24103:1;24106:5;24113:13;24128:1;24131:4;24137:12;24151:4;24076:17;:80::i;:::-;24054:102;;24215:16;24234:51;24256:4;24262:2;24266:5;24273:8;24283:1;24234:21;:51::i;:::-;24215:70;;24306:8;24301:1;:13;24293:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22818:1521;;;;;;;;;;;;:::o;20398:572::-;20605:17;;:::i;:::-;20688:1;7587:66;20657:10;20668:1;20657:13;;;;;;;;;;;20641:10;20652:1;20641:13;;;;;;;;;;;:29;20640:44;;;;;;:49;;20632:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20754:30;20766:2;20770:1;20773:10;20754:11;:30::i;:::-;20746:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20838:30;20850:2;20854:1;20857:10;20838:11;:30::i;:::-;20830:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20922:41;20934:10;20946;20958:4;20922:11;:41::i;:::-;20915:48;;20398:572;;;;;;;;;:::o;10655:244::-;10734:19;;:::i;:::-;10770:12;10780:1;10770:9;:12::i;:::-;10763:1;10765;10763:4;;;;;;;;;;:19;;;;;10797:26;10808:14;10817:1;10819;10817:4;;;;;;;;;;;10808:8;:14::i;:::-;10797:10;:26::i;:::-;10790:1;10792;10790:4;;;;;;;;;;:33;;;;;10847:1;10842;10835;10837;10835:4;;;;;;;;;;;:8;;;;;;:13;10831:62;;;10880:1;10882;10880:4;;;;;;;;;;;7587:66;10867:17;10860:1;10862;10860:4;;;;;;;;;;:24;;;;;10831:62;10655:244;;;:::o;9657:135::-;9720:4;7587:66;9757:30;;;;;9770:1;9772;9770:4;;;;;;;;;;;9764:1;9766;9764:4;;;;;;;;;;;9757:30;9739:14;9748:1;9750;9748:4;;;;;;;;;;;9739:8;:14::i;:::-;:48;9732:55;;9657:135;;;:::o;14164:203::-;14261:10;14273;7587:66;14305:26;;;;;14316:2;14312;14305:26;7587:66;14333:26;;;;;14344:2;14340;14333:26;14293:67;;;;;;;;14164:203;;;;;;;:::o;13760:318::-;13857:10;13869;13889:12;7587:66;13904:26;;;;;13915:2;13911;13904:26;13889:41;;13938:12;7587:66;13953:39;;;;;13977:2;13973;7587:66;13960:15;13953:39;13938:54;;7587:66;14012:30;;;;;14025:4;14019;14012:30;7587:66;14044:26;;;;;14055:2;14051;14044:26;14000:71;;;;;;;;13760:318;;;;;;;;;:::o;240:2378:33:-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;240:2378:33;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;240:2378:33;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;240:2378:33;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;240:2378:33;;;;:::o"
			},
			"methodIdentifiers": {
				"affineECAdd_(uint256[2],uint256[2],uint256)": "244f896d",
				"bigModExp_(uint256,uint256)": "5de60042",
				"ecmulVerify_(uint256[2],uint256,uint256[2])": "aa7b2fbb",
				"fieldHash_(bytes)": "b481e260",
				"hashToCurve_(uint256[2],uint256)": "35452450",
				"linearCombination_(uint256,uint256[2],uint256[2],uint256,uint256[2],uint256[2],uint256)": "fe54f2a2",
				"projectiveECAdd_(uint256,uint256,uint256,uint256)": "95e6ee92",
				"randomValueFromVRFProof_(bytes)": "cefda0c5",
				"scalarFromCurvePoints_(uint256[2],uint256[2],uint256[2],address,uint256[2])": "7f8f50a8",
				"squareRoot_(uint256)": "8af046ea",
				"verifyLinearCombinationWithGenerator_(uint256,uint256[2],uint256,address)": "91d5f691",
				"verifyVRFProof_(uint256[2],uint256[2],uint256,uint256,uint256,address,uint256[2],uint256[2],uint256)": "ef3b10ec",
				"ySquared_(uint256)": "9d6f0337"
			}
		},
		"metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"p1\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"p2\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256\",\"name\":\"invZ\",\"type\":\"uint256\"}],\"name\":\"affineECAdd_\",\"outputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"\",\"type\":\"uint256[2]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"base\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exponent\",\"type\":\"uint256\"}],\"name\":\"bigModExp_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"x\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256\",\"name\":\"scalar\",\"type\":\"uint256\"},{\"internalType\":\"uint256[2]\",\"name\":\"q\",\"type\":\"uint256[2]\"}],\"name\":\"ecmulVerify_\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"b\",\"type\":\"bytes\"}],\"name\":\"fieldHash_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"pk\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"hashToCurve_\",\"outputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"\",\"type\":\"uint256[2]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"},{\"internalType\":\"uint256[2]\",\"name\":\"p1\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"cp1Witness\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256\",\"name\":\"s\",\"type\":\"uint256\"},{\"internalType\":\"uint256[2]\",\"name\":\"p2\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"sp2Witness\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256\",\"name\":\"zInv\",\"type\":\"uint256\"}],\"name\":\"linearCombination_\",\"outputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"\",\"type\":\"uint256[2]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"px\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"py\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"qx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"qy\",\"type\":\"uint256\"}],\"name\":\"projectiveECAdd_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"randomValueFromVRFProof_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"output\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"hash\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"pk\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"gamma\",\"type\":\"uint256[2]\"},{\"internalType\":\"address\",\"name\":\"uWitness\",\"type\":\"address\"},{\"internalType\":\"uint256[2]\",\"name\":\"v\",\"type\":\"uint256[2]\"}],\"name\":\"scalarFromCurvePoints_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"squareRoot_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"},{\"internalType\":\"uint256[2]\",\"name\":\"p\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256\",\"name\":\"s\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lcWitness\",\"type\":\"address\"}],\"name\":\"verifyLinearCombinationWithGenerator_\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"pk\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"gamma\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"s\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"uWitness\",\"type\":\"address\"},{\"internalType\":\"uint256[2]\",\"name\":\"cGammaWitness\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"sHashWitness\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256\",\"name\":\"zInv\",\"type\":\"uint256\"}],\"name\":\"verifyVRFProof_\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"ySquared_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{},\"notice\":\"***********************************************************************Testing harness for VRF.sol, exposing its internal methods. Not tobe used for production.\"}},\"settings\":{\"compilationTarget\":{\"/Users/bartosz/localhost/chainlink/evm-contracts/src/v0.6/tests/VRFTestHelper.sol\":\"VRFTestHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/bartosz/localhost/chainlink/evm-contracts/src/v0.6/VRF.sol\":{\"keccak256\":\"0xfb21a49da78ea7ea7c371027608a74e1817006c23e9ccbe865230ed00b8a0dd4\",\"urls\":[\"bzz-raw://623742dffd5c55cc0d3e0a185c6e2e9fbda83272d63bbe89a11145a8ff09113d\",\"dweb:/ipfs/QmbiSvzL5ijbx1iVq4qVRJMr4ZNxDvDgmNjMToHgG2WaXt\"]},\"/Users/bartosz/localhost/chainlink/evm-contracts/src/v0.6/tests/VRFTestHelper.sol\":{\"keccak256\":\"0x923c4cce5245e40762107a11627bb737c5b9685b81bc3aef02c34a74c49be548\",\"urls\":[\"bzz-raw://f0f8e6729376aebdfc375bf667fef5a749187ab27588fde41041cd9d8ceb0a29\",\"dweb:/ipfs/QmSczHJKb7mWMH3JFCAvFik5VtekRdbf9zUx2se6ecxbot\"]}},\"version\":1}",
		"userdoc": {
			"methods": {},
			"notice": "***********************************************************************Testing harness for VRF.sol, exposing its internal methods. Not tobe used for production."
		}
	},
	"sources": {
		"tests/VRFTestHelper.sol": {
			"id": 33
		},
		"VRF.sol": {
			"id": 6
		}
	},
	"sourceCodes": {
		"tests/VRFTestHelper.sol": "pragma solidity 0.6.2;\n\nimport \"../VRF.sol\";\n\n/** ***********************************************************************\n    @notice Testing harness for VRF.sol, exposing its internal methods. Not to\n    @notice be used for production.\n*/\ncontract VRFTestHelper is VRF {\n  function bigModExp_(uint256 base, uint256 exponent) public view returns (uint256) {\n    return super.bigModExp(base, exponent);\n  }\n  function squareRoot_(uint256 x) public view returns (uint256) {\n    return super.squareRoot(x);\n  }\n  function ySquared_(uint256 x) public pure returns (uint256) {\n    return super.ySquared(x);\n  }\n  function fieldHash_(bytes memory b) public pure returns (uint256) {\n    return super.fieldHash(b);\n  }\n  function hashToCurve_(uint256[2] memory pk, uint256 x) public view returns(uint256[2] memory) {\n    return super.hashToCurve(pk, x);\n  }\n  function ecmulVerify_(uint256[2] memory x, uint256 scalar, uint256[2] memory q) public pure returns (bool) {\n    return super.ecmulVerify(x, scalar, q);\n  }\n  function projectiveECAdd_(uint256 px, uint256 py, uint256 qx, uint256 qy) public pure returns(uint256, uint256, uint256) {\n    return super.projectiveECAdd(px, py, qx, qy);\n  }\n  function affineECAdd_(uint256[2] memory p1, uint256[2] memory p2, uint256 invZ) public pure returns (uint256[2] memory) {\n    return super.affineECAdd(p1, p2, invZ);\n  }\n  function verifyLinearCombinationWithGenerator_(uint256 c, uint256[2] memory p, uint256 s, address lcWitness) public pure returns (bool) {\n    return super.verifyLinearCombinationWithGenerator(c, p, s, lcWitness);\n  }\n  function linearCombination_(uint256 c, uint256[2] memory p1, uint256[2] memory cp1Witness, uint256 s, uint256[2] memory p2, uint256[2] memory sp2Witness, uint256 zInv) public pure returns (uint256[2] memory) {\n    return super.linearCombination(c, p1, cp1Witness, s, p2, sp2Witness, zInv);\n  }\n  function scalarFromCurvePoints_(uint256[2] memory hash, uint256[2] memory pk, uint256[2] memory gamma, address uWitness, uint256[2] memory v) public pure returns (uint256) {\n    return super.scalarFromCurvePoints(hash, pk, gamma, uWitness, v);\n  }\n  function verifyVRFProof_(\n    uint256[2] memory pk, uint256[2] memory gamma, uint256 c, uint256 s,\n    uint256 seed, address uWitness, uint256[2] memory cGammaWitness,\n    uint256[2] memory sHashWitness, uint256 zInv)\n    public view {\n      super.verifyVRFProof(pk, gamma, c, s, seed, uWitness, cGammaWitness, sHashWitness, zInv);\n    }\n  function randomValueFromVRFProof_(bytes memory proof)\n    public view returns (uint256 output) {\n    return super.randomValueFromVRFProof(proof);\n  }\n}\n",
		"VRF.sol": "pragma solidity 0.6.2;\n\n/** ****************************************************************************\n  * @notice Verification of verifiable-random-function (VRF) proofs, following\n  * @notice https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3\n  * @notice See https://eprint.iacr.org/2017/099.pdf for security proofs.\n\n  * @dev Bibliographic references:\n\n  * @dev Goldberg, et al., \"Verifiable Random Functions (VRFs)\", Internet Draft\n  * @dev draft-irtf-cfrg-vrf-05, IETF, Aug 11 2019,\n  * @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05\n\n  * @dev Papadopoulos, et al., \"Making NSEC5 Practical for DNSSEC\", Cryptology\n  * @dev ePrint Archive, Report 2017/099, https://eprint.iacr.org/2017/099.pdf\n  * ****************************************************************************\n  * @dev USAGE\n\n  * @dev The main entry point is randomValueFromVRFProof. See its docstring.\n  * ****************************************************************************\n  * @dev PURPOSE\n\n  * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n  * @dev to Vera the verifier in such a way that Vera can be sure he's not\n  * @dev making his output up to suit himself. Reggie provides Vera a public key\n  * @dev to which he knows the secret key. Each time Vera provides a seed to\n  * @dev Reggie, he gives back a value which is computed completely\n  * @dev deterministically from the seed and the secret key.\n\n  * @dev Reggie provides a proof by which Vera can verify that the output was\n  * @dev correctly computed once Reggie tells it to her, but without that proof,\n  * @dev the output is computationally indistinguishable to her from a uniform\n  * @dev random sample from the output space.\n\n  * @dev The purpose of this contract is to perform that verification.\n  * ****************************************************************************\n  * @dev DESIGN NOTES\n\n  * @dev The VRF algorithm verified here satisfies the full unqiqueness, full\n  * @dev collision resistance, and full pseudorandomness security properties.\n  * @dev See \"SECURITY PROPERTIES\" below, and\n  * @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-3\n\n  * @dev An elliptic curve point is generally represented in the solidity code\n  * @dev as a uint256[2], corresponding to its affine coordinates in\n  * @dev GF(FIELD_SIZE).\n\n  * @dev For the sake of efficiency, this implementation deviates from the spec\n  * @dev in some minor ways:\n\n  * @dev - Keccak hash rather than the SHA256 hash recommended in\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5\n  * @dev   Keccak costs much less gas on the EVM, and provides similar security.\n\n  * @dev - Secp256k1 curve instead of the P-256 or ED25519 curves recommended in\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5\n  * @dev   For curve-point multiplication, it's much cheaper to abuse ECRECOVER\n\n  * @dev - hashToCurve recursively hashes until it finds a curve x-ordinate. On\n  * @dev   the EVM, this is slightly more efficient than the recommendation in\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.1.1\n  * @dev   step 5, to concatenate with a nonce then hash, and rehash with the\n  * @dev   nonce updated until a valid x-ordinate is found.\n\n  * @dev - hashToCurve does not include a cipher version string or the byte 0x1\n  * @dev   in the hash message, as recommended in step 5.B of the draft\n  * @dev   standard. They are unnecessary here because no variation in the\n  * @dev   cipher suite is allowed.\n\n  * @dev - Similarly, the hash input in scalarFromCurvePoints does not include a\n  * @dev   commitment to the cipher suite, either, which differs from step 2 of\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.3\n  * @dev   . Also, the hash input is the concatenation of the uncompressed\n  * @dev   points, not the compressed points as recommended in step 3.\n\n  * @dev - In the calculation of the challenge value \"c\", the \"u\" value (i.e.\n  * @dev   the value computed by Reggie as the nonce times the secp256k1\n  * @dev   generator point, see steps 5 and 7 of\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3\n  * @dev   ) is replaced by its ethereum address, i.e. the lower 160 bits of the\n  * @dev   keccak hash of the original u. This is because we only verify the\n  * @dev   calculation of u up to its address, by abusing ECRECOVER.\n  * ****************************************************************************\n  * @dev   SECURITY PROPERTIES\n\n  * @dev Here are the security properties for this VRF:\n\n  * @dev Full uniqueness: For any seed and valid VRF public key, there is\n  * @dev   exactly one VRF output which can be proved to come from that seed, in\n  * @dev   the sense that the proof will pass verifyVRFProof.\n\n  * @dev Full collision resistance: It's cryptographically infeasible to find\n  * @dev   two seeds with same VRF output from a fixed, valid VRF key\n\n  * @dev Full pseudorandomness: Absent the proofs that the VRF outputs are\n  * @dev   derived from a given seed, the outputs are computationally\n  * @dev   indistinguishable from randomness.\n\n  * @dev https://eprint.iacr.org/2017/099.pdf, Appendix B contains the proofs\n  * @dev for these properties.\n\n  * @dev For secp256k1, the key validation described in section\n  * @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.6\n  * @dev is unnecessary, because secp256k1 has cofactor 1, and the\n  * @dev representation of the public key used here (affine x- and y-ordinates\n  * @dev of the secp256k1 point on the standard y^2=x^3+7 curve) cannot refer to\n  * @dev the point at infinity.\n  * ****************************************************************************\n  * @dev OTHER SECURITY CONSIDERATIONS\n  *\n  * @dev The seed input to the VRF could in principle force an arbitrary amount\n  * @dev of work in hashToCurve, by requiring extra rounds of hashing and\n  * @dev checking whether that's yielded the x ordinate of a secp256k1 point.\n  * @dev However, under the Random Oracle Model the probability of choosing a\n  * @dev point which forces n extra rounds in hashToCurve is 2⁻ⁿ. The base cost\n  * @dev for calling hashToCurve is about 25,000 gas, and each round of checking\n  * @dev for a valid x ordinate costs about 15,555 gas, so to find a seed for\n  * @dev which hashToCurve would cost more than 2,017,000 gas, one would have to\n  * @dev try, in expectation, about 2¹²⁸ seeds, which is infeasible for any\n  * @dev forseeable computational resources. (25,000 + 128 * 15,555 < 2,017,000.)\n\n  * @dev Since the gas block limit for the Ethereum main net is 10,000,000 gas,\n  * @dev this means it is infeasible for an adversary to prevent correct\n  * @dev operation of this contract by choosing an adverse seed.\n\n  * @dev (See TestMeasureHashToCurveGasCost for verification of the gas cost for\n  * @dev hashToCurve.)\n\n  * @dev It may be possible to make a secure constant-time hashToCurve function.\n  * @dev See notes in hashToCurve docstring.\n*/\ncontract VRF {\n\n  // See https://www.secg.org/sec2-v2.pdf, section 2.4.1, for these constants.\n  uint256 constant private GROUP_ORDER = // Number of points in Secp256k1\n    // solium-disable-next-line indentation\n    0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141;\n  // Prime characteristic of the galois field over which Secp256k1 is defined\n  uint256 constant private FIELD_SIZE =\n    // solium-disable-next-line indentation\n    0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F;\n  uint256 constant private WORD_LENGTH_BYTES = 0x20;\n\n  // (base^exponent) % FIELD_SIZE\n  // Cribbed from https://medium.com/@rbkhmrcr/precompiles-solidity-e5d29bd428c4\n  function bigModExp(uint256 base, uint256 exponent)\n    internal view returns (uint256 exponentiation) {\n      uint256 callResult;\n      uint256[6] memory bigModExpContractInputs;\n      bigModExpContractInputs[0] = WORD_LENGTH_BYTES;  // Length of base\n      bigModExpContractInputs[1] = WORD_LENGTH_BYTES;  // Length of exponent\n      bigModExpContractInputs[2] = WORD_LENGTH_BYTES;  // Length of modulus\n      bigModExpContractInputs[3] = base;\n      bigModExpContractInputs[4] = exponent;\n      bigModExpContractInputs[5] = FIELD_SIZE;\n      uint256[1] memory output;\n      assembly { // solhint-disable-line no-inline-assembly\n      callResult := staticcall(\n        not(0),                   // Gas cost: no limit\n        0x05,                     // Bigmodexp contract address\n        bigModExpContractInputs,\n        0xc0,                     // Length of input segment: 6*0x20-bytes\n        output,\n        0x20                      // Length of output segment\n      )\n      }\n      if (callResult == 0) {revert(\"bigModExp failure!\");}\n      return output[0];\n    }\n\n  // Let q=FIELD_SIZE. q % 4 = 3, ∴ x≡r^2 mod q ⇒ x^SQRT_POWER≡±r mod q.  See\n  // https://en.wikipedia.org/wiki/Modular_square_root#Prime_or_prime_power_modulus\n  uint256 constant private SQRT_POWER = (FIELD_SIZE + 1) >> 2;\n\n  // Computes a s.t. a^2 = x in the field. Assumes a exists\n  function squareRoot(uint256 x) internal view returns (uint256) {\n    return bigModExp(x, SQRT_POWER);\n  }\n\n  // The value of y^2 given that (x,y) is on secp256k1.\n  function ySquared(uint256 x) internal pure returns (uint256) {\n    // Curve is y^2=x^3+7. See section 2.4.1 of https://www.secg.org/sec2-v2.pdf\n    uint256 xCubed = mulmod(x, mulmod(x, x, FIELD_SIZE), FIELD_SIZE);\n    return addmod(xCubed, 7, FIELD_SIZE);\n  }\n\n  // True iff p is on secp256k1\n  function isOnCurve(uint256[2] memory p) internal pure returns (bool) {\n    return ySquared(p[0]) == mulmod(p[1], p[1], FIELD_SIZE);\n  }\n\n  // Hash x uniformly into {0, ..., FIELD_SIZE-1}.\n  function fieldHash(bytes memory b) internal pure returns (uint256 x_) {\n    x_ = uint256(keccak256(b));\n    // Rejecting if x >= FIELD_SIZE corresponds to step 2.1 in section 2.3.4 of\n    // http://www.secg.org/sec1-v2.pdf , which is part of the definition of\n    // string_to_point in the IETF draft\n    while (x_ >= FIELD_SIZE) {\n      x_ = uint256(keccak256(abi.encodePacked(x_)));\n    }\n  }\n\n  // Hash b to a random point which hopefully lies on secp256k1. The y ordinate\n  // is always even, due to\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.1.1\n  // step 5.C, which references arbitrary_string_to_point, defined in\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5 as\n  // returning the point with given x ordinate, and even y ordinate.\n  function newCandidateSecp256k1Point(bytes memory b)\n    internal view returns (uint256[2] memory p) {\n      p[0] = fieldHash(b);\n      p[1] = squareRoot(ySquared(p[0]));\n      if (p[1] % 2 == 1) {\n        p[1] = FIELD_SIZE - p[1];\n      }\n    }\n\n  // Domain-separation tag for initial hash in hashToCurve. Corresponds to\n  // vrf.go/hashToCurveHashPrefix\n  uint256 constant HASH_TO_CURVE_HASH_PREFIX = 1;\n\n  // Cryptographic hash function onto the curve.\n  //\n  // Corresponds to algorithm in section 5.4.1.1 of the draft standard. (But see\n  // DESIGN NOTES above for slight differences.)\n  //\n  // TODO(alx): Implement a bounded-computation hash-to-curve, as described in\n  // \"Construction of Rational Points on Elliptic Curves over Finite Fields\"\n  // http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.831.5299&rep=rep1&type=pdf\n  // and suggested by\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-01#section-5.2.2\n  // (Though we can't used exactly that because secp256k1's j-invariant is 0.)\n  //\n  // This would greatly simplify the analysis in \"OTHER SECURITY CONSIDERATIONS\"\n  // https://www.pivotaltracker.com/story/show/171120900\n  function hashToCurve(uint256[2] memory pk, uint256 input)\n    internal view returns (uint256[2] memory rv) {\n      rv = newCandidateSecp256k1Point(abi.encodePacked(HASH_TO_CURVE_HASH_PREFIX,\n                                                       pk, input));\n      while (!isOnCurve(rv)) {\n        rv = newCandidateSecp256k1Point(abi.encodePacked(rv[0]));\n      }\n    }\n\n  /** *********************************************************************\n   * @notice Check that product==scalar*multiplicand\n   *\n   * @dev Based on Vitalik Buterin's idea in ethresear.ch post cited below.\n   *\n   * @param multiplicand: secp256k1 point\n   * @param scalar: non-zero GF(GROUP_ORDER) scalar\n   * @param product: secp256k1 expected to be mulitplier * multiplicand\n   * @return verifies true iff product==scalar*multiplicand, with cryptographically high probability\n   */\n  function ecmulVerify(uint256[2] memory multiplicand, uint256 scalar,\n    uint256[2] memory product) internal pure returns(bool verifies)\n  {\n    require(scalar != 0); // Rules out an ecrecover failure case\n    uint256 x = multiplicand[0]; // x ordinate of multiplicand\n    uint8 v = multiplicand[1] % 2 == 0 ? 27 : 28; // parity of y ordinate\n    // https://ethresear.ch/t/you-can-kinda-abuse-ecrecover-to-do-ecmul-in-secp256k1-today/2384/9\n    // Point corresponding to address ecrecover(0, v, x, s=scalar*x) is\n    // (x⁻¹ mod GROUP_ORDER) * (scalar * x * multiplicand - 0 * g), i.e.\n    // scalar*multiplicand. See https://crypto.stackexchange.com/a/18106\n    bytes32 scalarTimesX = bytes32(mulmod(scalar, x, GROUP_ORDER));\n    address actual = ecrecover(bytes32(0), v, bytes32(x), scalarTimesX);\n    // Explicit conversion to address takes bottom 160 bits\n    address expected = address(uint256(keccak256(abi.encodePacked(product))));\n    return (actual == expected);\n  }\n\n  // Returns x1/z1-x2/z2=(x1z2-x2z1)/(z1z2) in projective coordinates on P¹(𝔽ₙ)\n  function projectiveSub(uint256 x1, uint256 z1, uint256 x2, uint256 z2)\n    internal pure returns(uint256 x3, uint256 z3) {\n      uint256 num1 = mulmod(z2, x1, FIELD_SIZE);\n      uint256 num2 = mulmod(FIELD_SIZE - x2, z1, FIELD_SIZE);\n      (x3, z3) = (addmod(num1, num2, FIELD_SIZE), mulmod(z1, z2, FIELD_SIZE));\n    }\n\n  // Returns x1/z1*x2/z2=(x1x2)/(z1z2), in projective coordinates on P¹(𝔽ₙ)\n  function projectiveMul(uint256 x1, uint256 z1, uint256 x2, uint256 z2)\n    internal pure returns(uint256 x3, uint256 z3) {\n      (x3, z3) = (mulmod(x1, x2, FIELD_SIZE), mulmod(z1, z2, FIELD_SIZE));\n    }\n\n  /** **************************************************************************\n      @notice Computes elliptic-curve sum, in projective co-ordinates\n\n      @dev Using projective coordinates avoids costly divisions\n\n      @dev To use this with p and q in affine coordinates, call\n      @dev projectiveECAdd(px, py, qx, qy). This will return\n      @dev the addition of (px, py, 1) and (qx, qy, 1), in the\n      @dev secp256k1 group.\n\n      @dev This can be used to calculate the z which is the inverse to zInv\n      @dev in isValidVRFOutput. But consider using a faster\n      @dev re-implementation such as ProjectiveECAdd in the golang vrf package.\n\n      @dev This function assumes [px,py,1],[qx,qy,1] are valid projective\n           coordinates of secp256k1 points. That is safe in this contract,\n           because this method is only used by linearCombination, which checks\n           points are on the curve via ecrecover.\n      **************************************************************************\n      @param px The first affine coordinate of the first summand\n      @param py The second affine coordinate of the first summand\n      @param qx The first affine coordinate of the second summand\n      @param qy The second affine coordinate of the second summand\n\n      (px,py) and (qx,qy) must be distinct, valid secp256k1 points.\n      **************************************************************************\n      Return values are projective coordinates of [px,py,1]+[qx,qy,1] as points\n      on secp256k1, in P²(𝔽ₙ)\n      @return sx \n      @return sy\n      @return sz\n  */\n  function projectiveECAdd(uint256 px, uint256 py, uint256 qx, uint256 qy)\n    internal pure returns(uint256 sx, uint256 sy, uint256 sz) {\n      // See \"Group law for E/K : y^2 = x^3 + ax + b\", in section 3.1.2, p. 80,\n      // \"Guide to Elliptic Curve Cryptography\" by Hankerson, Menezes and Vanstone\n      // We take the equations there for (sx,sy), and homogenize them to\n      // projective coordinates. That way, no inverses are required, here, and we\n      // only need the one inverse in affineECAdd.\n\n      // We only need the \"point addition\" equations from Hankerson et al. Can\n      // skip the \"point doubling\" equations because p1 == p2 is cryptographically\n      // impossible, and require'd not to be the case in linearCombination.\n\n      // Add extra \"projective coordinate\" to the two points\n      (uint256 z1, uint256 z2) = (1, 1);\n\n      // (lx, lz) = (qy-py)/(qx-px), i.e., gradient of secant line.\n      uint256 lx = addmod(qy, FIELD_SIZE - py, FIELD_SIZE);\n      uint256 lz = addmod(qx, FIELD_SIZE - px, FIELD_SIZE);\n\n      uint256 dx; // Accumulates denominator from sx calculation\n      // sx=((qy-py)/(qx-px))^2-px-qx\n      (sx, dx) = projectiveMul(lx, lz, lx, lz); // ((qy-py)/(qx-px))^2\n      (sx, dx) = projectiveSub(sx, dx, px, z1); // ((qy-py)/(qx-px))^2-px\n      (sx, dx) = projectiveSub(sx, dx, qx, z2); // ((qy-py)/(qx-px))^2-px-qx\n\n      uint256 dy; // Accumulates denominator from sy calculation\n      // sy=((qy-py)/(qx-px))(px-sx)-py\n      (sy, dy) = projectiveSub(px, z1, sx, dx); // px-sx\n      (sy, dy) = projectiveMul(sy, dy, lx, lz); // ((qy-py)/(qx-px))(px-sx)\n      (sy, dy) = projectiveSub(sy, dy, py, z1); // ((qy-py)/(qx-px))(px-sx)-py\n\n      if (dx != dy) { // Cross-multiply to put everything over a common denominator\n        sx = mulmod(sx, dy, FIELD_SIZE);\n        sy = mulmod(sy, dx, FIELD_SIZE);\n        sz = mulmod(dx, dy, FIELD_SIZE);\n      } else { // Already over a common denominator, use that for z ordinate\n        sz = dx;\n      }\n    }\n\n  // p1+p2, as affine points on secp256k1.\n  //\n  // invZ must be the inverse of the z returned by projectiveECAdd(p1, p2).\n  // It is computed off-chain to save gas.\n  //\n  // p1 and p2 must be distinct, because projectiveECAdd doesn't handle\n  // point doubling.\n  function affineECAdd(\n    uint256[2] memory p1, uint256[2] memory p2,\n    uint256 invZ) internal pure returns (uint256[2] memory) {\n    uint256 x;\n    uint256 y;\n    uint256 z;\n    (x, y, z) = projectiveECAdd(p1[0], p1[1], p2[0], p2[1]);\n    require(mulmod(z, invZ, FIELD_SIZE) == 1, \"invZ must be inverse of z\");\n    // Clear the z ordinate of the projective representation by dividing through\n    // by it, to obtain the affine representation\n    return [mulmod(x, invZ, FIELD_SIZE), mulmod(y, invZ, FIELD_SIZE)];\n  }\n\n  // True iff address(c*p+s*g) == lcWitness, where g is generator. (With\n  // cryptographically high probability.)\n  function verifyLinearCombinationWithGenerator(\n    uint256 c, uint256[2] memory p, uint256 s, address lcWitness)\n    internal pure returns (bool) {\n      // Rule out ecrecover failure modes which return address 0.\n      require(lcWitness != address(0), \"bad witness\");\n      uint8 v = (p[1] % 2 == 0) ? 27 : 28; // parity of y-ordinate of p\n      bytes32 pseudoHash = bytes32(GROUP_ORDER - mulmod(p[0], s, GROUP_ORDER)); // -s*p[0]\n      bytes32 pseudoSignature = bytes32(mulmod(c, p[0], GROUP_ORDER)); // c*p[0]\n      // https://ethresear.ch/t/you-can-kinda-abuse-ecrecover-to-do-ecmul-in-secp256k1-today/2384/9\n      // The point corresponding to the address returned by\n      // ecrecover(-s*p[0],v,p[0],c*p[0]) is\n      // (p[0]⁻¹ mod GROUP_ORDER)*(c*p[0]-(-s)*p[0]*g)=c*p+s*g.\n      // See https://crypto.stackexchange.com/a/18106\n      // https://bitcoin.stackexchange.com/questions/38351/ecdsa-v-r-s-what-is-v\n      address computed = ecrecover(pseudoHash, v, bytes32(p[0]), pseudoSignature);\n      return computed == lcWitness;\n    }\n\n  // c*p1 + s*p2. Requires cp1Witness=c*p1 and sp2Witness=s*p2. Also\n  // requires cp1Witness != sp2Witness (which is fine for this application,\n  // since it is cryptographically impossible for them to be equal. In the\n  // (cryptographically impossible) case that a prover accidentally derives\n  // a proof with equal c*p1 and s*p2, they should retry with a different\n  // proof nonce.) Assumes that all points are on secp256k1\n  // (which is checked in verifyVRFProof below.)\n  function linearCombination(\n    uint256 c, uint256[2] memory p1, uint256[2] memory cp1Witness,\n    uint256 s, uint256[2] memory p2, uint256[2] memory sp2Witness,\n    uint256 zInv)\n    internal pure returns (uint256[2] memory) {\n      require((cp1Witness[0] - sp2Witness[0]) % FIELD_SIZE != 0,\n              \"points in sum must be distinct\");\n      require(ecmulVerify(p1, c, cp1Witness), \"First multiplication check failed\");\n      require(ecmulVerify(p2, s, sp2Witness), \"Second multiplication check failed\");\n      return affineECAdd(cp1Witness, sp2Witness, zInv);\n    }\n\n  // Domain-separation tag for the hash taken in scalarFromCurvePoints.\n  // Corresponds to scalarFromCurveHashPrefix in vrf.go\n  uint256 constant SCALAR_FROM_CURVE_POINTS_HASH_PREFIX = 2;\n\n  // Pseudo-random number from inputs. Matches vrf.go/scalarFromCurvePoints, and\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.3\n  // The draft calls (in step 7, via the definition of string_to_int, in\n  // https://datatracker.ietf.org/doc/html/rfc8017#section-4.2 ) for taking the\n  // first hash without checking that it corresponds to a number less than the\n  // group order, which will lead to a slight bias in the sample.\n  //\n  // TODO(alx): We could save a bit of gas by following the standard here and\n  // using the compressed representation of the points, if we collated the y\n  // parities into a single bytes32.\n  // https://www.pivotaltracker.com/story/show/171120588\n  function scalarFromCurvePoints(\n    uint256[2] memory hash, uint256[2] memory pk, uint256[2] memory gamma,\n    address uWitness, uint256[2] memory v)\n    internal pure returns (uint256 s) {\n      return uint256(\n        keccak256(abi.encodePacked(SCALAR_FROM_CURVE_POINTS_HASH_PREFIX,\n                                   hash, pk, gamma, v, uWitness)));\n    }\n\n  // True if (gamma, c, s) is a correctly constructed randomness proof from pk\n  // and seed. zInv must be the inverse of the third ordinate from\n  // projectiveECAdd applied to cGammaWitness and sHashWitness. Corresponds to\n  // section 5.3 of the IETF draft.\n  //\n  // TODO(alx): Since I'm only using pk in the ecrecover call, I could only pass\n  // the x ordinate, and the parity of the y ordinate in the top bit of uWitness\n  // (which I could make a uint256 without using any extra space.) Would save\n  // about 2000 gas. https://www.pivotaltracker.com/story/show/170828567\n  function verifyVRFProof(\n    uint256[2] memory pk, uint256[2] memory gamma, uint256 c, uint256 s,\n    uint256 seed, address uWitness, uint256[2] memory cGammaWitness,\n    uint256[2] memory sHashWitness, uint256 zInv)\n    internal view {\n      require(isOnCurve(pk), \"public key is not on curve\");\n      require(isOnCurve(gamma), \"gamma is not on curve\");\n      require(isOnCurve(cGammaWitness), \"cGammaWitness is not on curve\");\n      require(isOnCurve(sHashWitness), \"sHashWitness is not on curve\");\n      // Step 5. of IETF draft section 5.3 (pk corresponds to 5.3's Y, and here\n      // we use the address of u instead of u itself. Also, here we add the\n      // terms instead of taking the difference, and in the proof consruction in\n      // vrf.GenerateProof, we correspondingly take the difference instead of\n      // taking the sum as they do in step 7 of section 5.1.)\n      require(\n        verifyLinearCombinationWithGenerator(c, pk, s, uWitness),\n        \"addr(c*pk+s*g)≠_uWitness\"\n      );\n      // Step 4. of IETF draft section 5.3 (pk corresponds to Y, seed to alpha_string)\n      uint256[2] memory hash = hashToCurve(pk, seed);\n      // Step 6. of IETF draft section 5.3, but see note for step 5 about +/- terms\n      uint256[2] memory v = linearCombination(\n        c, gamma, cGammaWitness, s, hash, sHashWitness, zInv);\n      // Steps 7. and 8. of IETF draft section 5.3\n      uint256 derivedC = scalarFromCurvePoints(hash, pk, gamma, uWitness, v);\n      require(c == derivedC, \"invalid proof\");\n    }\n\n  // Domain-separation tag for the hash used as the final VRF output.\n  // Corresponds to vrfRandomOutputHashPrefix in vrf.go\n  uint256 constant VRF_RANDOM_OUTPUT_HASH_PREFIX = 3;\n\n  // Length of proof marshaled to bytes array. Shows layout of proof\n  uint private constant PROOF_LENGTH = 64 + // PublicKey (uncompressed format.)\n    64 + // Gamma\n    32 + // C\n    32 + // S\n    32 + // Seed\n    0 + // Dummy entry: The following elements are included for gas efficiency:\n    32 + // uWitness (gets padded to 256 bits, even though it's only 160)\n    64 + // cGammaWitness\n    64 + // sHashWitness\n    32; // zInv  (Leave Output out, because that can be efficiently calculated)\n\n  /* ***************************************************************************\n   * @notice Returns proof's output, if proof is valid. Otherwise reverts\n\n   * @param proof A binary-encoded proof, as output by vrf.Proof.MarshalForSolidityVerifier\n   *\n   * Throws if proof is invalid, otherwise:\n   * @return output i.e., the random output implied by the proof\n   * ***************************************************************************\n   * @dev See the calculation of PROOF_LENGTH for the binary layout of proof.\n   */\n  function randomValueFromVRFProof(bytes memory proof)\n    internal view returns (uint256 output) {\n      require(proof.length == PROOF_LENGTH, \"wrong proof length\");\n\n      uint256[2] memory pk; // parse proof contents into these variables\n      uint256[2] memory gamma;\n      // c, s and seed combined (prevents \"stack too deep\" compilation error)\n      uint256[3] memory cSSeed;\n      address uWitness;\n      uint256[2] memory cGammaWitness;\n      uint256[2] memory sHashWitness;\n      uint256 zInv;\n      (pk, gamma, cSSeed, uWitness, cGammaWitness, sHashWitness, zInv) = abi.decode(\n        proof, (uint256[2], uint256[2], uint256[3], address, uint256[2],\n                uint256[2], uint256));\n      verifyVRFProof(\n        pk,\n        gamma,\n        cSSeed[0], // c\n        cSSeed[1], // s\n        cSSeed[2], // seed\n        uWitness,\n        cGammaWitness,\n        sHashWitness,\n        zInv\n      );\n      output = uint256(keccak256(abi.encode(VRF_RANDOM_OUTPUT_HASH_PREFIX, gamma)));\n    }\n}\n"
	},
	"sourceTreeHashHex": "0xfcabd1c4163106b3b20fc4b67b3308e3cf06c8ac6493b8427680f094e64284d3",
	"compiler": {
		"name": "solc",
		"version": "soljson-v0.6.2+commit.bacdbe57.js",
		"settings": {
			"optimizer": {
				"enabled": false
			},
			"outputSelection": {
				"*": {
					"*": [
						"abi",
						"devdoc",
						"userdoc",
						"evm.bytecode.object",
						"evm.bytecode.sourceMap",
						"evm.deployedBytecode.object",
						"evm.deployedBytecode.sourceMap",
						"evm.methodIdentifiers",
						"metadata"
					]
				}
			},
			"remappings": []
		}
	},
	"chains": {}
}